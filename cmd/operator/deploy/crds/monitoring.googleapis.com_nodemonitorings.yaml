# Copyright 2022 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: nodemonitorings.monitoring.googleapis.com
  annotations:
    controller-gen.kubebuilder.io/version: v0.12.0
spec:
  group: monitoring.googleapis.com
  names:
    kind: NodeMonitoring
    listKind: NodeMonitoringList
    plural: nodemonitorings
    singular: nodemonitoring
  scope: Namespaced
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        type: object
        description: NodeMonitoring defines monitoring for a set of nodes.
        properties:
          apiVersion:
            type: string
            description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          kind:
            type: string
            description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          metadata:
            type: object
          spec:
            type: object
            description: Specification of desired node selection for target discovery by Prometheus.
            properties:
              selector:
                type: object
                description: Label selector that specifies which nodes are selected for this monitoring configuration. If left empty all nodes are selected.
                properties:
                  matchExpressions:
                    type: array
                    description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                    items:
                      type: object
                      description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                      properties:
                        key:
                          type: string
                          description: key is the label key that the selector applies to.
                        operator:
                          type: string
                          description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                        values:
                          type: array
                          description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                          items:
                            type: string
                      required:
                      - key
                      - operator
                  matchLabels:
                    type: object
                    additionalProperties:
                      type: string
                    description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                x-kubernetes-map-type: atomic
              endpoints:
                type: array
                description: The endpoints to scrape on the selected nodes.
                items:
                  type: object
                  description: ScrapeEndpoint specifies a Prometheus metrics endpoint to scrape.
                  properties:
                    port:
                      anyOf:
                      - type: integer
                      - type: string
                      description: Name or number of the port to scrape. The container metadata label is only populated if the port is referenced by name because port numbers are not unique across containers.
                      x-kubernetes-int-or-string: true
                    basicAuth:
                      type: object
                      description: The HTTP basic authentication credentials for the targets.
                      properties:
                        username:
                          type: string
                          description: The username for authentication.
                    interval:
                      type: string
                      default: 1m
                      description: Interval at which to scrape metrics. Must be a valid Prometheus duration.
                      pattern: ^((([0-9]+)y)?(([0-9]+)w)?(([0-9]+)d)?(([0-9]+)h)?(([0-9]+)m)?(([0-9]+)s)?(([0-9]+)ms)?|0)$
                    metricRelabeling:
                      type: array
                      description: Relabeling rules for metrics scraped from this endpoint. Relabeling rules that override protected target labels (project_id, location, cluster, namespace, job, instance, or __address__) are not permitted. The labelmap action is not permitted in general.
                      items:
                        type: object
                        description: RelabelingRule defines a single Prometheus relabeling rule.
                        properties:
                          action:
                            type: string
                            description: Action to perform based on regex matching. Defaults to 'replace'.
                          modulus:
                            type: integer
                            description: Modulus to take of the hash of the source label values.
                            format: int64
                          regex:
                            type: string
                            description: Regular expression against which the extracted value is matched. Defaults to '(.*)'.
                          replacement:
                            type: string
                            description: Replacement value against which a regex replace is performed if the regular expression matches. Regex capture groups are available. Defaults to '$1'.
                          separator:
                            type: string
                            description: Separator placed between concatenated source label values. Defaults to ';'.
                          sourceLabels:
                            type: array
                            description: The source labels select values from existing labels. Their content is concatenated using the configured separator and matched against the configured regular expression for the replace, keep, and drop actions.
                            items:
                              type: string
                          targetLabel:
                            type: string
                            description: Label to which the resulting value is written in a replace action. It is mandatory for replace actions. Regex capture groups are available.
                    params:
                      type: object
                      additionalProperties:
                        type: array
                        items:
                          type: string
                      description: HTTP GET params to use when scraping.
                    path:
                      type: string
                      description: HTTP path to scrape metrics from. Defaults to "/metrics".
                    proxyUrl:
                      type: string
                      description: HTTP proxy server to use to connect to the targets. Encoded passwords are not supported.
                    scheme:
                      type: string
                      description: Protocol scheme to use to scrape.
                    timeout:
                      type: string
                      description: Timeout for metrics scrapes. Must be a valid Prometheus duration. Must not be larger then the scrape interval.
                    tls:
                      type: object
                      description: Configures the scrape request's TLS settings.
                      properties:
                        insecureSkipVerify:
                          type: boolean
                          description: Disable target certificate validation.
                        maxVersion:
                          type: string
                          description: 'Maximum TLS version. Accepted values: TLS10 (TLS 1.0), TLS11 (TLS 1.1), TLS12 (TLS 1.2), TLS13 (TLS 1.3). If unset, Prometheus will use Go default minimum version, which is TLS 1.2. See MinVersion in https://pkg.go.dev/crypto/tls#Config.'
                        minVersion:
                          type: string
                          description: 'Minimum TLS version. Accepted values: TLS10 (TLS 1.0), TLS11 (TLS 1.1), TLS12 (TLS 1.2), TLS13 (TLS 1.3). If unset, Prometheus will use Go default minimum version, which is TLS 1.2. See MinVersion in https://pkg.go.dev/crypto/tls#Config.'
                        serverName:
                          type: string
                          description: Used to verify the hostname for the targets.
                  required:
                  - port
              limits:
                type: object
                description: Limits to apply at scrape time.
                properties:
                  labels:
                    type: integer
                    description: Maximum number of labels accepted for a single sample. Uses Prometheus default if left unspecified.
                    format: int64
                  labelNameLength:
                    type: integer
                    description: Maximum label name length. Uses Prometheus default if left unspecified.
                    format: int64
                  labelValueLength:
                    type: integer
                    description: Maximum label value length. Uses Prometheus default if left unspecified.
                    format: int64
                  samples:
                    type: integer
                    description: Maximum number of samples accepted within a single scrape. Uses Prometheus default if left unspecified.
                    format: int64
            required:
            - endpoints
        required:
        - spec
    served: true
    storage: true
    subresources:
      status: {}
