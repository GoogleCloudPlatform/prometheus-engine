{"version":3,"names":["transpileNamespace","path","allowNamespaces","node","declare","id","type","remove","get","buildCodeFrameError","name","value","handleNested","t","cloneNode","bound","scope","hasOwnBinding","parent","parentPath","insertAfter","replaceWith","getDeclaration","registerDeclaration","replaceWithMultiple","variableDeclaration","variableDeclarator","identifier","getMemberExpression","itemName","memberExpression","handleVariableDeclaration","hub","kind","file","declarations","every","declarator","isIdentifier","init","assignmentExpression","bindingIdentifiers","getBindingIdentifiers","assignments","idName","push","expressionStatement","sequenceExpression","buildNestedAmbiendModuleError","buildError","Error","parentExport","names","Set","realName","assertIdentifier","generateUid","namespaceTopLevel","isTSModuleBlock","body","exportNamedDeclaration","i","length","subNode","transformed","moduleName","has","add","splice","declaration","nodes","fallthroughValue","objectExpression","memberExpr","template","expression","ast","statement"],"sources":["../src/namespace.ts"],"sourcesContent":["import { template, types as t } from \"@babel/core\";\nimport type { NodePath } from \"@babel/traverse\";\n\nexport default function transpileNamespace(\n  path: NodePath<t.TSModuleDeclaration>,\n  allowNamespaces: boolean,\n) {\n  if (path.node.declare || path.node.id.type === \"StringLiteral\") {\n    path.remove();\n    return;\n  }\n\n  if (!allowNamespaces) {\n    throw path\n      .get(\"id\")\n      .buildCodeFrameError(\n        \"Namespace not marked type-only declare.\" +\n          \" Non-declarative namespaces are only supported experimentally in Babel.\" +\n          \" To enable and review caveats see:\" +\n          \" https://babeljs.io/docs/en/babel-plugin-transform-typescript\",\n      );\n  }\n\n  const name = path.node.id.name;\n  const value = handleNested(path, t.cloneNode(path.node, true));\n  const bound = path.scope.hasOwnBinding(name);\n  if (path.parent.type === \"ExportNamedDeclaration\") {\n    if (!bound) {\n      path.parentPath.insertAfter(value);\n      path.replaceWith(getDeclaration(name));\n      path.scope.registerDeclaration(path.parentPath);\n    } else {\n      path.parentPath.replaceWith(value);\n    }\n  } else if (bound) {\n    path.replaceWith(value);\n  } else {\n    path.scope.registerDeclaration(\n      path.replaceWithMultiple([getDeclaration(name), value])[0],\n    );\n  }\n}\n\nfunction getDeclaration(name: string) {\n  return t.variableDeclaration(\"let\", [\n    t.variableDeclarator(t.identifier(name)),\n  ]);\n}\n\nfunction getMemberExpression(name: string, itemName: string) {\n  return t.memberExpression(t.identifier(name), t.identifier(itemName));\n}\n\n/**\n * Convert export const foo = 1 to Namepsace.foo = 1;\n *\n * @param {t.VariableDeclaration} node given variable declaration, e.g. `const foo = 1`\n * @param {string} name the generated unique namespace member name\n * @param {*} hub An instance implements HubInterface defined in `@babel/traverse` that can throw a code frame error\n */\nfunction handleVariableDeclaration(\n  node: t.VariableDeclaration,\n  name: string,\n  hub: any,\n): t.Statement[] {\n  if (node.kind !== \"const\") {\n    throw hub.file.buildCodeFrameError(\n      node,\n      \"Namespaces exporting non-const are not supported by Babel.\" +\n        \" Change to const or see:\" +\n        \" https://babeljs.io/docs/en/babel-plugin-transform-typescript\",\n    );\n  }\n  const { declarations } = node;\n  if (\n    declarations.every(\n      (declarator): declarator is t.VariableDeclarator & { id: t.Identifier } =>\n        t.isIdentifier(declarator.id),\n    )\n  ) {\n    // `export const a = 1` transforms to `const a = N.a = 1`, the output\n    // is smaller than `const a = 1; N.a = a`;\n    for (const declarator of declarations) {\n      declarator.init = t.assignmentExpression(\n        \"=\",\n        getMemberExpression(name, declarator.id.name),\n        declarator.init,\n      );\n    }\n    return [node];\n  }\n  // Now we have pattern in declarators\n  // `export const [a] = 1` transforms to `const [a] = 1; N.a = a`\n  const bindingIdentifiers = t.getBindingIdentifiers(node);\n  const assignments = [];\n  // getBindingIdentifiers returns an object without prototype.\n  // eslint-disable-next-line guard-for-in\n  for (const idName in bindingIdentifiers) {\n    assignments.push(\n      t.assignmentExpression(\n        \"=\",\n        getMemberExpression(name, idName),\n        t.cloneNode(bindingIdentifiers[idName]),\n      ),\n    );\n  }\n  return [node, t.expressionStatement(t.sequenceExpression(assignments))];\n}\n\nfunction buildNestedAmbiendModuleError(path: NodePath, node: t.Node) {\n  throw path.hub.buildError(\n    node,\n    \"Ambient modules cannot be nested in other modules or namespaces.\",\n    Error,\n  );\n}\n\nfunction handleNested(\n  path: NodePath,\n  node: t.TSModuleDeclaration,\n  parentExport?: t.Expression,\n) {\n  const names = new Set();\n  const realName = node.id;\n  t.assertIdentifier(realName);\n\n  const name = path.scope.generateUid(realName.name);\n\n  const namespaceTopLevel: t.Statement[] = t.isTSModuleBlock(node.body)\n    ? node.body.body\n    : // We handle `namespace X.Y {}` as if it was\n      //   namespace X {\n      //     export namespace Y {}\n      //   }\n      [t.exportNamedDeclaration(node.body)];\n\n  for (let i = 0; i < namespaceTopLevel.length; i++) {\n    const subNode = namespaceTopLevel[i];\n\n    // The first switch is mainly to detect name usage. Only export\n    // declarations require further transformation.\n    switch (subNode.type) {\n      case \"TSModuleDeclaration\": {\n        if (!t.isIdentifier(subNode.id)) {\n          throw buildNestedAmbiendModuleError(path, subNode);\n        }\n\n        const transformed = handleNested(path, subNode);\n        const moduleName = subNode.id.name;\n        if (names.has(moduleName)) {\n          namespaceTopLevel[i] = transformed;\n        } else {\n          names.add(moduleName);\n          namespaceTopLevel.splice(\n            i++,\n            1,\n            getDeclaration(moduleName),\n            transformed,\n          );\n        }\n        continue;\n      }\n      case \"TSEnumDeclaration\":\n      case \"FunctionDeclaration\":\n      case \"ClassDeclaration\":\n        names.add(subNode.id.name);\n        continue;\n      case \"VariableDeclaration\": {\n        // getBindingIdentifiers returns an object without prototype.\n        // eslint-disable-next-line guard-for-in\n        for (const name in t.getBindingIdentifiers(subNode)) {\n          names.add(name);\n        }\n        continue;\n      }\n      default:\n        // Neither named declaration nor export, continue to next item.\n        continue;\n      case \"ExportNamedDeclaration\":\n      // Export declarations get parsed using the next switch.\n    }\n\n    if (\"declare\" in subNode.declaration && subNode.declaration.declare) {\n      continue;\n    }\n\n    // Transform the export declarations that occur inside of a namespace.\n    switch (subNode.declaration.type) {\n      case \"TSEnumDeclaration\":\n      case \"FunctionDeclaration\":\n      case \"ClassDeclaration\": {\n        const itemName = subNode.declaration.id.name;\n        names.add(itemName);\n        namespaceTopLevel.splice(\n          i++,\n          1,\n          subNode.declaration,\n          t.expressionStatement(\n            t.assignmentExpression(\n              \"=\",\n              getMemberExpression(name, itemName),\n              t.identifier(itemName),\n            ),\n          ),\n        );\n        break;\n      }\n      case \"VariableDeclaration\": {\n        const nodes = handleVariableDeclaration(\n          subNode.declaration,\n          name,\n          path.hub,\n        );\n        namespaceTopLevel.splice(i, nodes.length, ...nodes);\n        i += nodes.length - 1;\n        break;\n      }\n      case \"TSModuleDeclaration\": {\n        if (!t.isIdentifier(subNode.declaration.id)) {\n          throw buildNestedAmbiendModuleError(path, subNode.declaration);\n        }\n\n        const transformed = handleNested(\n          path,\n          subNode.declaration,\n          t.identifier(name),\n        );\n        const moduleName = subNode.declaration.id.name;\n        if (names.has(moduleName)) {\n          namespaceTopLevel[i] = transformed;\n        } else {\n          names.add(moduleName);\n          namespaceTopLevel.splice(\n            i++,\n            1,\n            getDeclaration(moduleName),\n            transformed,\n          );\n        }\n      }\n    }\n  }\n\n  // {}\n  let fallthroughValue: t.Expression = t.objectExpression([]);\n\n  if (parentExport) {\n    const memberExpr = t.memberExpression(parentExport, realName);\n    fallthroughValue = template.expression.ast`\n      ${t.cloneNode(memberExpr)} ||\n        (${t.cloneNode(memberExpr)} = ${fallthroughValue})\n    `;\n  }\n\n  return template.statement.ast`\n    (function (${t.identifier(name)}) {\n      ${namespaceTopLevel}\n    })(${realName} || (${t.cloneNode(realName)} = ${fallthroughValue}));\n  `;\n}\n"],"mappings":"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"}