{"version":3,"sources":["../src/range.js"],"names":["MAX_SAFE_INTEGER","Number","isValidLength","x","Math","abs","range","min","max","RangeError","gte","lt"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;;;AAEA,IAAMA,gBAAgB,GAAGC,MAAM,CAACD,gBAAP;AAA2B;AAA2B,SAAC,CAAD,EAAM,EAAN,IAAY,CAA3F;;AAEA,SAASE,aAAT,CAAuBC,CAAvB,EAA0B;AACxB,SAAO,2BAAUA,CAAV,KAAgBC,IAAI,CAACC,GAAL,CAASF,CAAT,IAAcH,gBAArC;AACD;;AAEc,SAASM,KAAT,CAAeC,GAAf,EAAoBC,GAApB,EAAyB;AACtC,MAAI,CAACN,aAAa,CAACK,GAAD,CAAd,IAAuB,CAACL,aAAa,CAACM,GAAD,CAAzC,EAAgD;AAC9C,UAAM,IAAIC,UAAJ,4CAAiDF,GAAjD,kBAA4DC,GAA5D,YAAN;AACD;;AACD,MAAID,GAAG,KAAKC,GAAZ,EAAiB;AACf,UAAM,IAAIC,UAAJ,CAAe,kCAAf,CAAN;AACD;;AACD,SAAO,+BAAc,qBAAI,CAAC,0BAAD,EAAY,yBAAQ;AAAEC,IAAAA,GAAG,EAAEH,GAAP;AAAYI,IAAAA,EAAE,EAAEH;AAAhB,GAAR,CAAZ,CAAJ,EAAiD,OAAjD,CAAd,EAAyE,OAAzE,EAAkF;AAAED,IAAAA,GAAG,EAAHA,GAAF;AAAOC,IAAAA,GAAG,EAAHA;AAAP,GAAlF,CAAP;AACD","sourcesContent":["import and from './and';\nimport between from './between';\nimport integer from './integer';\nimport isInteger from './helpers/isInteger';\nimport wrapValidator from './helpers/wrapValidator';\n\nconst MAX_SAFE_INTEGER = Number.MAX_SAFE_INTEGER || /* istanbul ignore next */ (2 ** 53) - 1;\n\nfunction isValidLength(x) {\n  return isInteger(x) && Math.abs(x) < MAX_SAFE_INTEGER;\n}\n\nexport default function range(min, max) {\n  if (!isValidLength(min) || !isValidLength(max)) {\n    throw new RangeError(`\"range\" requires two integers: ${min} and ${max} given`);\n  }\n  if (min === max) {\n    throw new RangeError('min and max must not be the same');\n  }\n  return wrapValidator(and([integer(), between({ gte: min, lt: max })], 'range'), 'range', { min, max });\n}\n"],"file":"range.js"}