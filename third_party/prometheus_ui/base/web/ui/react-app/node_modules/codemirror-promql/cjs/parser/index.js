"use strict";
// The MIT License (MIT)
//
// Copyright (c) 2021 The Prometheus Authors
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in all
// copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
// SOFTWARE.
Object.defineProperty(exports, "__esModule", { value: true });
exports.retrieveAllRecursiveNodes = exports.containsChild = exports.containsAtLeastOneChild = exports.walkThrough = exports.walkBackward = exports.Parser = exports.labelMatchersToString = exports.buildLabelMatchers = void 0;
var matcher_1 = require("./matcher");
Object.defineProperty(exports, "buildLabelMatchers", { enumerable: true, get: function () { return matcher_1.buildLabelMatchers; } });
Object.defineProperty(exports, "labelMatchersToString", { enumerable: true, get: function () { return matcher_1.labelMatchersToString; } });
var parser_1 = require("./parser");
Object.defineProperty(exports, "Parser", { enumerable: true, get: function () { return parser_1.Parser; } });
var path_finder_1 = require("./path-finder");
Object.defineProperty(exports, "walkBackward", { enumerable: true, get: function () { return path_finder_1.walkBackward; } });
Object.defineProperty(exports, "walkThrough", { enumerable: true, get: function () { return path_finder_1.walkThrough; } });
Object.defineProperty(exports, "containsAtLeastOneChild", { enumerable: true, get: function () { return path_finder_1.containsAtLeastOneChild; } });
Object.defineProperty(exports, "containsChild", { enumerable: true, get: function () { return path_finder_1.containsChild; } });
Object.defineProperty(exports, "retrieveAllRecursiveNodes", { enumerable: true, get: function () { return path_finder_1.retrieveAllRecursiveNodes; } });
//# sourceMappingURL=index.js.map