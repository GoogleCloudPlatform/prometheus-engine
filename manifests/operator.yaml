# Copyright 2022 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is autogenerated.
apiVersion: v1
kind: Namespace
metadata:
  name: gmp-system
---
apiVersion: v1
kind: Namespace
metadata:
  name: gmp-public
---
apiVersion: scheduling.k8s.io/v1
description: Used for GMP collector pods.
kind: PriorityClass
metadata:
  name: gmp-critical
value: 1000000000
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: collector
  namespace: gmp-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: operator
  namespace: gmp-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: gmp-system:collector
rules:
- apiGroups:
  - ""
  resources:
  - endpoints
  - nodes
  - nodes/metrics
  - pods
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
- nonResourceURLs:
  - /metrics
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: operator
  namespace: gmp-system
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - list
  - watch
  - create
- apiGroups:
  - ""
  resourceNames:
  - collection
  - rules
  - alertmanager
  resources:
  - secrets
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - list
  - watch
  - create
- apiGroups:
  - ""
  resourceNames:
  - collector
  - rule-evaluator
  - rules-generated
  resources:
  - configmaps
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - apps
  resourceNames:
  - collector
  resources:
  - daemonsets
  verbs:
  - get
  - list
  - watch
  - delete
  - patch
  - update
- apiGroups:
  - apps
  resources:
  - deployments
  verbs:
  - list
  - watch
- apiGroups:
  - apps
  resourceNames:
  - rule-evaluator
  resources:
  - deployments
  verbs:
  - get
  - delete
  - patch
  - update
- apiGroups:
  - ""
  resourceNames:
  - alertmanager
  resources:
  - services
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: operator
  namespace: gmp-public
rules:
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - monitoring.googleapis.com
  resources:
  - operatorconfigs
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: gmp-system:operator
rules:
- apiGroups:
  - admissionregistration.k8s.io
  resourceNames:
  - gmp-operator.gmp-system.monitoring.googleapis.com
  resources:
  - validatingwebhookconfigurations
  - mutatingwebhookconfigurations
  verbs:
  - get
  - patch
  - update
  - watch
- apiGroups:
  - admissionregistration.k8s.io
  resourceNames:
  - gmp-operator
  resources:
  - validatingwebhookconfigurations
  - mutatingwebhookconfigurations
  verbs:
  - delete
- apiGroups:
  - monitoring.googleapis.com
  resources:
  - clusterpodmonitorings
  - clusterrules
  - globalrules
  - podmonitorings
  - rules
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - monitoring.googleapis.com
  resources:
  - clusterpodmonitorings/status
  - clusterrules/status
  - globalrules/status
  - podmonitorings/status
  - rules/status
  verbs:
  - get
  - patch
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: gmp-system:operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: gmp-system:operator
subjects:
- kind: ServiceAccount
  name: operator
  namespace: gmp-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: operator
  namespace: gmp-public
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: operator
subjects:
- kind: ServiceAccount
  name: operator
  namespace: gmp-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: operator
  namespace: gmp-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: operator
subjects:
- kind: ServiceAccount
  name: operator
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: gmp-system:collector
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: gmp-system:collector
subjects:
- kind: ServiceAccount
  name: collector
  namespace: gmp-system
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: managed-prometheus-operator
    app.kubernetes.io/component: operator
    app.kubernetes.io/name: gmp-operator
    app.kubernetes.io/part-of: gmp
  name: gmp-operator
  namespace: gmp-system
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: operator
      app.kubernetes.io/name: gmp-operator
      app.kubernetes.io/part-of: gmp
  template:
    metadata:
      labels:
        app: managed-prometheus-operator
        app.kubernetes.io/component: operator
        app.kubernetes.io/name: gmp-operator
        app.kubernetes.io/part-of: gmp
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.io/arch
                operator: In
                values:
                - arm64
                - amd64
              - key: kubernetes.io/os
                operator: In
                values:
                - linux
      automountServiceAccountToken: true
      containers:
      - args:
        - --operator-namespace=gmp-system
        - --public-namespace=gmp-public
        - --webhook-addr=:10250
        image: gke.gcr.io/prometheus-engine/operator:v0.5.0-gke.0
        name: operator
        ports:
        - containerPort: 10250
          name: web
        - containerPort: 18080
          name: metrics
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - all
          privileged: false
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
      priorityClassName: gmp-critical
      securityContext:
        seccompProfile:
          type: RuntimeDefault
      serviceAccountName: operator
      tolerations:
      - effect: NoExecute
        operator: Exists
      - effect: NoSchedule
        operator: Exists
      - effect: NoSchedule
        key: kubernetes.io/arch
        operator: Equal
        value: amd64
      - effect: NoSchedule
        key: kubernetes.io/arch
        operator: Equal
        value: arm64
---
apiVersion: v1
kind: Service
metadata:
  name: gmp-operator
  namespace: gmp-system
spec:
  ports:
  - name: legacy
    port: 8443
    protocol: TCP
    targetPort: webhook
  - name: webhook
    port: 443
    protocol: TCP
    targetPort: web
  selector:
    app.kubernetes.io/component: operator
    app.kubernetes.io/name: gmp-operator
    app.kubernetes.io/part-of: gmp
---
apiVersion: monitoring.googleapis.com/v1
kind: OperatorConfig
metadata:
  name: config
  namespace: gmp-public
---
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  name: gmp-operator.gmp-system.monitoring.googleapis.com
webhooks:
- admissionReviewVersions:
  - v1
  clientConfig:
    service:
      name: gmp-operator
      namespace: gmp-system
      path: /validate/monitoring.googleapis.com/v1/podmonitorings
      port: 443
  failurePolicy: Fail
  name: validate.podmonitorings.gmp-operator.gmp-system.monitoring.googleapis.com
  rules:
  - apiGroups:
    - monitoring.googleapis.com
    apiVersions:
    - v1
    operations:
    - CREATE
    - UPDATE
    resources:
    - podmonitorings
  sideEffects: None
- admissionReviewVersions:
  - v1
  clientConfig:
    service:
      name: gmp-operator
      namespace: gmp-system
      path: /validate/monitoring.googleapis.com/v1/clusterpodmonitorings
      port: 443
  failurePolicy: Fail
  name: validate.clusterpodmonitorings.gmp-operator.gmp-system.monitoring.googleapis.com
  rules:
  - apiGroups:
    - monitoring.googleapis.com
    apiVersions:
    - v1
    operations:
    - CREATE
    - UPDATE
    resources:
    - clusterpodmonitorings
  sideEffects: None
- admissionReviewVersions:
  - v1
  clientConfig:
    service:
      name: gmp-operator
      namespace: gmp-system
      path: /validate/monitoring.googleapis.com/v1/rules
      port: 443
  failurePolicy: Fail
  name: validate.rules.gmp-operator.gmp-system.monitoring.googleapis.com
  rules:
  - apiGroups:
    - monitoring.googleapis.com
    apiVersions:
    - v1
    operations:
    - CREATE
    - UPDATE
    resources:
    - rules
  sideEffects: None
- admissionReviewVersions:
  - v1
  clientConfig:
    service:
      name: gmp-operator
      namespace: gmp-system
      path: /validate/monitoring.googleapis.com/v1/clusterrules
      port: 443
  failurePolicy: Fail
  name: validate.clusterrules.gmp-operator.gmp-system.monitoring.googleapis.com
  rules:
  - apiGroups:
    - monitoring.googleapis.com
    apiVersions:
    - v1
    operations:
    - CREATE
    - UPDATE
    resources:
    - clusterrules
  sideEffects: None
- admissionReviewVersions:
  - v1
  clientConfig:
    service:
      name: gmp-operator
      namespace: gmp-system
      path: /validate/monitoring.googleapis.com/v1/globalrules
      port: 443
  failurePolicy: Fail
  name: validate.globalrules.gmp-operator.gmp-system.monitoring.googleapis.com
  rules:
  - apiGroups:
    - monitoring.googleapis.com
    apiVersions:
    - v1
    operations:
    - CREATE
    - UPDATE
    resources:
    - globalrules
  sideEffects: None
- admissionReviewVersions:
  - v1
  clientConfig:
    service:
      name: gmp-operator
      namespace: gmp-system
      path: /validate/monitoring.googleapis.com/v1/operatorconfigs
      port: 443
  failurePolicy: Fail
  name: validate.operatorconfigs.gmp-operator.gmp-system.monitoring.googleapis.com
  rules:
  - apiGroups:
    - monitoring.googleapis.com
    apiVersions:
    - v1
    operations:
    - CREATE
    - UPDATE
    resources:
    - operatorconfigs
  sideEffects: None
---
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  name: gmp-operator.gmp-system.monitoring.googleapis.com
webhooks:
- admissionReviewVersions:
  - v1
  clientConfig:
    service:
      name: gmp-operator
      namespace: gmp-system
      path: /default/monitoring.googleapis.com/v1/podmonitorings
      port: 443
  failurePolicy: Fail
  name: default.podmonitorings.gmp-operator.gmp-system.monitoring.googleapis.com
  rules:
  - apiGroups:
    - monitoring.googleapis.com
    apiVersions:
    - v1
    operations:
    - CREATE
    - UPDATE
    resources:
    - podmonitorings
  sideEffects: None
- admissionReviewVersions:
  - v1
  clientConfig:
    service:
      name: gmp-operator
      namespace: gmp-system
      path: /default/monitoring.googleapis.com/v1/clusterpodmonitorings
      port: 443
  failurePolicy: Fail
  name: default.clusterpodmonitorings.gmp-operator.gmp-system.monitoring.googleapis.com
  rules:
  - apiGroups:
    - monitoring.googleapis.com
    apiVersions:
    - v1
    operations:
    - CREATE
    - UPDATE
    resources:
    - clusterpodmonitorings
  sideEffects: None
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: collector
  namespace: gmp-system
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: collector
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
        components.gke.io/component-name: managed_prometheus
      labels:
        app: managed-prometheus-collector
        app.kubernetes.io/name: collector
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.io/arch
                operator: In
                values:
                - arm64
                - amd64
              - key: kubernetes.io/os
                operator: In
                values:
                - linux
      automountServiceAccountToken: true
      containers:
      - args:
        - --config.file=/prometheus/config_out/config.yaml
        - --storage.tsdb.path=/prometheus/data
        - --storage.tsdb.no-lockfile
        - --storage.tsdb.retention.time=30m
        - --storage.tsdb.wal-compression
        - --storage.tsdb.min-block-duration=10m
        - --storage.tsdb.max-block-duration=10m
        - --web.listen-address=:19090
        - --web.enable-lifecycle
        - --web.route-prefix=/
        - --export.user-agent=prometheus/2.35.0-gmp.2 (mode:kubectl)
        env:
        - name: GOGC
          value: "25"
        image: gke.gcr.io/prometheus-engine/prometheus:v2.35.0-gmp.2-gke.0
        livenessProbe:
          httpGet:
            path: /-/healthy
            port: 19090
            scheme: HTTP
        name: prometheus
        ports:
        - containerPort: 19090
          name: prom-metrics
        readinessProbe:
          httpGet:
            path: /-/ready
            port: 19090
            scheme: HTTP
        resources:
          limits:
            memory: 3G
          requests:
            cpu: 100m
            memory: 200M
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - all
          privileged: false
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
        volumeMounts:
        - mountPath: /prometheus/data
          name: storage
        - mountPath: /prometheus/config_out
          name: config-out
          readOnly: true
        - mountPath: /etc/secrets
          name: collection-secret
          readOnly: true
      - args:
        - --config-file=/prometheus/config/config.yaml
        - --config-file-output=/prometheus/config_out/config.yaml
        - --reload-url=http://localhost:19090/-/reload
        - --listen-address=:19091
        env:
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        image: gke.gcr.io/prometheus-engine/config-reloader:v0.5.0-gke.0
        name: config-reloader
        ports:
        - containerPort: 19091
          name: cfg-rel-metrics
        resources:
          limits:
            memory: 32M
          requests:
            cpu: 5m
            memory: 16M
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - all
          privileged: false
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
        volumeMounts:
        - mountPath: /prometheus/config
          name: config
          readOnly: true
        - mountPath: /prometheus/config_out
          name: config-out
      initContainers:
      - command:
        - /bin/bash
        - -c
        - touch /prometheus/config_out/config.yaml
        image: gke.gcr.io/gke-distroless/bash:20220419
        name: config-init
        volumeMounts:
        - mountPath: /prometheus/config_out
          name: config-out
      priorityClassName: gmp-critical
      securityContext:
        seccompProfile:
          type: RuntimeDefault
      serviceAccountName: collector
      tolerations:
      - effect: NoExecute
        operator: Exists
      - effect: NoSchedule
        operator: Exists
      - effect: NoSchedule
        key: kubernetes.io/arch
        operator: Equal
        value: amd64
      - effect: NoSchedule
        key: kubernetes.io/arch
        operator: Equal
        value: arm64
      volumes:
      - emptyDir: {}
        name: storage
      - configMap:
          name: collector
        name: config
      - emptyDir: {}
        name: config-out
      - name: collection-secret
        secret:
          secretName: collection
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: rule-evaluator
  namespace: gmp-system
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: rule-evaluator
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
        components.gke.io/component-name: managed_prometheus
      labels:
        app: managed-prometheus-rule-evaluator
        app.kubernetes.io/name: rule-evaluator
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.io/arch
                operator: In
                values:
                - arm64
                - amd64
              - key: kubernetes.io/os
                operator: In
                values:
                - linux
      automountServiceAccountToken: true
      containers:
      - args:
        - --config.file=/prometheus/config_out/config.yaml
        - --web.listen-address=:19092
        - --export.user-agent=rule-evaluator/0.5.0 (mode:kubectl)
        image: gke.gcr.io/prometheus-engine/rule-evaluator:v0.5.0-gke.0
        livenessProbe:
          httpGet:
            path: /-/healthy
            port: 19092
            scheme: HTTP
        name: evaluator
        ports:
        - containerPort: 19092
          name: r-eval-metrics
        readinessProbe:
          httpGet:
            path: /-/ready
            port: 19092
            scheme: HTTP
        resources:
          limits:
            memory: 1G
          requests:
            cpu: 100m
            memory: 200M
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - all
          privileged: false
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
        volumeMounts:
        - mountPath: /prometheus/config_out
          name: config-out
          readOnly: true
        - mountPath: /etc/rules
          name: rules
          readOnly: true
        - mountPath: /etc/secrets
          name: rules-secret
          readOnly: true
      - args:
        - --config-file=/prometheus/config/config.yaml
        - --config-file-output=/prometheus/config_out/config.yaml
        - --watched-dir=/etc/rules
        - --watched-dir=/etc/secrets
        - --reload-url=http://localhost:19092/-/reload
        - --listen-address=:19093
        image: gke.gcr.io/prometheus-engine/config-reloader:v0.5.0-gke.0
        name: config-reloader
        ports:
        - containerPort: 19093
          name: cfg-rel-metrics
        resources:
          limits:
            memory: 32M
          requests:
            cpu: 5m
            memory: 16M
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - all
          privileged: false
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
        volumeMounts:
        - mountPath: /prometheus/config
          name: config
          readOnly: true
        - mountPath: /prometheus/config_out
          name: config-out
        - mountPath: /etc/rules
          name: rules
          readOnly: true
        - mountPath: /etc/secrets
          name: rules-secret
          readOnly: true
      initContainers:
      - command:
        - /bin/bash
        - -c
        - touch /prometheus/config_out/config.yaml
        image: gke.gcr.io/gke-distroless/bash:20220419
        name: config-init
        volumeMounts:
        - mountPath: /prometheus/config_out
          name: config-out
      priorityClassName: gmp-critical
      securityContext:
        seccompProfile:
          type: RuntimeDefault
      serviceAccountName: collector
      tolerations:
      - effect: NoExecute
        operator: Exists
      - effect: NoSchedule
        operator: Exists
      - effect: NoSchedule
        key: kubernetes.io/arch
        operator: Equal
        value: amd64
      - effect: NoSchedule
        key: kubernetes.io/arch
        operator: Equal
        value: arm64
      volumes:
      - configMap:
          defaultMode: 420
          name: rule-evaluator
        name: config
      - emptyDir: {}
        name: config-out
      - configMap:
          defaultMode: 420
          name: rules-generated
        name: rules
      - name: rules-secret
        secret:
          defaultMode: 420
          secretName: rules
---
apiVersion: v1
kind: Service
metadata:
  name: alertmanager
  namespace: gmp-system
spec:
  clusterIP: None
  ports:
  - name: alertmanager
    port: 9093
    targetPort: 9093
  selector:
    app.kubernetes.io/name: alertmanager
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: alertmanager
  namespace: gmp-system
spec:
  replicas: 1
  selector:
    matchLabels:
      app: managed-prometheus-alertmanager
      app.kubernetes.io/name: alertmanager
  serviceName: alertmanager
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
        components.gke.io/component-name: managed_prometheus
      labels:
        app: managed-prometheus-alertmanager
        app.kubernetes.io/name: alertmanager
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.io/arch
                operator: In
                values:
                - arm64
                - amd64
              - key: kubernetes.io/os
                operator: In
                values:
                - linux
      containers:
      - args:
        - --config.file=/alertmanager/config_out/config.yaml
        - --storage.path=/alertmanager-data
        image: gke.gcr.io/prometheus-engine/alertmanager:v0.24.0-gmp.0-gke.0
        name: alertmanager
        ports:
        - containerPort: 9093
          name: alertmanager
        resources:
          limits:
            memory: 1G
          requests:
            cpu: 100m
            memory: 200M
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - all
          privileged: false
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
        volumeMounts:
        - mountPath: /alertmanager/config_out
          name: alertmanager-config
          readOnly: true
        - mountPath: /alertmanager-data
          name: alertmanager-data
      - args:
        - --config-file=/alertmanager/config.yaml
        - --config-file-output=/alertmanager/config_out/config.yaml
        - --reload-url=http://localhost:9093/-/reload
        - --listen-address=:19091
        env:
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        image: gke.gcr.io/prometheus-engine/config-reloader:v0.5.0-gke.0
        name: config-reloader
        ports:
        - containerPort: 19091
          name: cfg-rel-metrics
        resources:
          limits:
            memory: 32M
          requests:
            cpu: 5m
            memory: 16M
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - all
          privileged: false
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
        volumeMounts:
        - mountPath: /alertmanager
          name: config
          readOnly: true
        - mountPath: /alertmanager/config_out
          name: alertmanager-config
      initContainers:
      - command:
        - /bin/bash
        - -c
        - 'touch /alertmanager/config_out/config.yaml && echo -e "receivers:\n  -
          name: noop\nroute:\n  receiver: noop" > alertmanager/config_out/config.yaml'
        image: gke.gcr.io/gke-distroless/bash:20220419
        name: config-init
        volumeMounts:
        - mountPath: /alertmanager/config_out
          name: alertmanager-config
      priorityClassName: gmp-critical
      securityContext:
        seccompProfile:
          type: RuntimeDefault
      tolerations:
      - effect: NoExecute
        operator: Exists
      - effect: NoSchedule
        operator: Exists
      - effect: NoSchedule
        key: kubernetes.io/arch
        operator: Equal
        value: amd64
      - effect: NoSchedule
        key: kubernetes.io/arch
        operator: Equal
        value: arm64
      volumes:
      - name: config
        secret:
          secretName: alertmanager
      - emptyDir: {}
        name: alertmanager-data
      - emptyDir: {}
        name: alertmanager-config
