# Copyright 2022 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is autogenerated.
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: clusterpodmonitorings.monitoring.googleapis.com
  annotations:
    controller-gen.kubebuilder.io/version: v0.12.0
spec:
  group: monitoring.googleapis.com
  names:
    kind: ClusterPodMonitoring
    listKind: ClusterPodMonitoringList
    plural: clusterpodmonitorings
    singular: clusterpodmonitoring
  scope: Cluster
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        type: object
        description: ClusterPodMonitoring defines monitoring for a set of pods, scoped to all pods within the cluster.
        properties:
          apiVersion:
            type: string
            description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          kind:
            type: string
            description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          metadata:
            type: object
          spec:
            type: object
            description: Specification of desired Pod selection for target discovery by Prometheus.
            properties:
              selector:
                type: object
                description: Label selector that specifies which pods are selected for this monitoring configuration.
                properties:
                  matchExpressions:
                    type: array
                    description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                    items:
                      type: object
                      description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                      properties:
                        key:
                          type: string
                          description: key is the label key that the selector applies to.
                        operator:
                          type: string
                          description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                        values:
                          type: array
                          description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                          items:
                            type: string
                      required:
                      - key
                      - operator
                  matchLabels:
                    type: object
                    additionalProperties:
                      type: string
                    description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                x-kubernetes-map-type: atomic
              endpoints:
                type: array
                description: The endpoints to scrape on the selected pods.
                items:
                  type: object
                  description: ScrapeEndpoint specifies a Prometheus metrics endpoint to scrape.
                  properties:
                    port:
                      anyOf:
                      - type: integer
                      - type: string
                      description: Name or number of the port to scrape. The container metadata label is only populated if the port is referenced by name because port numbers are not unique across containers.
                      x-kubernetes-int-or-string: true
                    interval:
                      type: string
                      default: 1m
                      description: Interval at which to scrape metrics. Must be a valid Prometheus duration.
                      pattern: ^((([0-9]+)y)?(([0-9]+)w)?(([0-9]+)d)?(([0-9]+)h)?(([0-9]+)m)?(([0-9]+)s)?(([0-9]+)ms)?|0)$
                    metricRelabeling:
                      type: array
                      description: Relabeling rules for metrics scraped from this endpoint. Relabeling rules that override protected target labels (project_id, location, cluster, namespace, job, instance, or __address__) are not permitted. The labelmap action is not permitted in general.
                      items:
                        type: object
                        description: RelabelingRule defines a single Prometheus relabeling rule.
                        properties:
                          action:
                            type: string
                            description: Action to perform based on regex matching. Defaults to 'replace'.
                          modulus:
                            type: integer
                            description: Modulus to take of the hash of the source label values.
                            format: int64
                          regex:
                            type: string
                            description: Regular expression against which the extracted value is matched. Defaults to '(.*)'.
                          replacement:
                            type: string
                            description: Replacement value against which a regex replace is performed if the regular expression matches. Regex capture groups are available. Defaults to '$1'.
                          separator:
                            type: string
                            description: Separator placed between concatenated source label values. Defaults to ';'.
                          sourceLabels:
                            type: array
                            description: The source labels select values from existing labels. Their content is concatenated using the configured separator and matched against the configured regular expression for the replace, keep, and drop actions.
                            items:
                              type: string
                          targetLabel:
                            type: string
                            description: Label to which the resulting value is written in a replace action. It is mandatory for replace actions. Regex capture groups are available.
                    params:
                      type: object
                      additionalProperties:
                        type: array
                        items:
                          type: string
                      description: HTTP GET params to use when scraping.
                    path:
                      type: string
                      description: HTTP path to scrape metrics from. Defaults to "/metrics".
                    proxyUrl:
                      type: string
                      description: Proxy URL to scrape through. Encoded passwords are not supported.
                    scheme:
                      type: string
                      description: Protocol scheme to use to scrape.
                    timeout:
                      type: string
                      description: Timeout for metrics scrapes. Must be a valid Prometheus duration. Must not be larger then the scrape interval.
                    tls:
                      type: object
                      description: Configures the scrape request's TLS settings.
                      properties:
                        insecureSkipVerify:
                          type: boolean
                          description: Disable target certificate validation.
                        maxVersion:
                          type: string
                          description: 'Maximum TLS version. Accepted values: TLS10 (TLS 1.0), TLS11 (TLS 1.1), TLS12 (TLS 1.2), TLS13 (TLS 1.3). If unset, Prometheus will use Go default minimum version, which is TLS 1.2. See MinVersion in https://pkg.go.dev/crypto/tls#Config.'
                        minVersion:
                          type: string
                          description: 'Minimum TLS version. Accepted values: TLS10 (TLS 1.0), TLS11 (TLS 1.1), TLS12 (TLS 1.2), TLS13 (TLS 1.3). If unset, Prometheus will use Go default minimum version, which is TLS 1.2. See MinVersion in https://pkg.go.dev/crypto/tls#Config.'
                        serverName:
                          type: string
                          description: Used to verify the hostname for the targets.
                  required:
                  - port
              limits:
                type: object
                description: Limits to apply at scrape time.
                properties:
                  labels:
                    type: integer
                    description: Maximum number of labels accepted for a single sample. Uses Prometheus default if left unspecified.
                    format: int64
                  labelNameLength:
                    type: integer
                    description: Maximum label name length. Uses Prometheus default if left unspecified.
                    format: int64
                  labelValueLength:
                    type: integer
                    description: Maximum label value length. Uses Prometheus default if left unspecified.
                    format: int64
                  samples:
                    type: integer
                    description: Maximum number of samples accepted within a single scrape. Uses Prometheus default if left unspecified.
                    format: int64
              targetLabels:
                type: object
                description: Labels to add to the Prometheus target for discovered endpoints. The `instance` label is always set to `<pod_name>:<port>` or `<node_name>:<port>` if the scraped pod is controlled by a DaemonSet.
                properties:
                  metadata:
                    type: array
                    description: Pod metadata labels that are set on all scraped targets. Permitted keys are `pod`, `container`, and `node` for PodMonitoring and `pod`, `container`, `node`, and `namespace` for ClusterPodMonitoring. The `container` label is only populated if the scrape port is referenced by name. Defaults to [pod, container] for PodMonitoring and [namespace, pod, container] for ClusterPodMonitoring. If set to null, it will be interpreted as the empty list for PodMonitoring and to [namespace] for ClusterPodMonitoring. This is for backwards-compatibility only.
                    items:
                      type: string
                  fromPod:
                    type: array
                    description: Labels to transfer from the Kubernetes Pod to Prometheus target labels. Mappings are applied in order.
                    items:
                      type: object
                      description: LabelMapping specifies how to transfer a label from a Kubernetes resource onto a Prometheus target.
                      properties:
                        from:
                          type: string
                          description: Kubenetes resource label to remap.
                        to:
                          type: string
                          description: Remapped Prometheus target label. Defaults to the same name as `From`.
                      required:
                      - from
            required:
            - endpoints
            - selector
          status:
            type: object
            description: Most recently observed status of the resource.
            properties:
              conditions:
                type: array
                description: Represents the latest available observations of a podmonitor's current state.
                items:
                  type: object
                  description: MonitoringCondition describes a condition of a PodMonitoring.
                  properties:
                    type:
                      type: string
                      description: MonitoringConditionType is the type of MonitoringCondition.
                    status:
                      type: string
                      description: Status of the condition, one of True, False, Unknown.
                    lastTransitionTime:
                      type: string
                      description: Last time the condition transitioned from one status to another.
                      format: date-time
                    lastUpdateTime:
                      type: string
                      description: The last time this condition was updated.
                      format: date-time
                    message:
                      type: string
                      description: A human-readable message indicating details about the transition.
                    reason:
                      type: string
                      description: The reason for the condition's last transition.
                  required:
                  - status
                  - type
              endpointStatuses:
                type: array
                description: Represents the latest available observations of target state for each ScrapeEndpoint.
                items:
                  type: object
                  properties:
                    name:
                      type: string
                      description: The name of the ScrapeEndpoint.
                    activeTargets:
                      type: integer
                      description: Total number of active targets.
                      format: int64
                    collectorsFraction:
                      type: string
                      description: Fraction of collectors included in status, bounded [0,1]. Ideally, this should always be 1. Anything less can be considered a problem and should be investigated.
                    lastUpdateTime:
                      type: string
                      description: Last time this status was updated.
                      format: date-time
                    sampleGroups:
                      type: array
                      description: A fixed sample of targets grouped by error type.
                      items:
                        type: object
                        properties:
                          count:
                            type: integer
                            description: Total count of similar errors.
                            format: int32
                          sampleTargets:
                            type: array
                            description: Targets emitting the error message.
                            items:
                              type: object
                              properties:
                                labels:
                                  type: object
                                  additionalProperties:
                                    type: string
                                    description: A LabelValue is an associated value for a LabelName.
                                  description: The label set, keys and values, of the target.
                                health:
                                  type: string
                                  description: Health status.
                                lastError:
                                  type: string
                                  description: Error message.
                                lastScrapeDurationSeconds:
                                  type: string
                                  description: Scrape duration in seconds.
                    unhealthyTargets:
                      type: integer
                      description: Total number of active, unhealthy targets.
                      format: int64
                  required:
                  - name
              observedGeneration:
                type: integer
                description: The generation observed by the controller.
                format: int64
        required:
        - spec
    served: true
    storage: true
    subresources:
      status: {}
  - name: v1alpha1
    deprecated: true
    schema:
      openAPIV3Schema:
        type: object
        description: ClusterPodMonitoring defines monitoring for a set of pods.
        properties:
          apiVersion:
            type: string
            description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          kind:
            type: string
            description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          metadata:
            type: object
          spec:
            type: object
            description: Specification of desired Pod selection for target discovery by Prometheus.
            properties:
              selector:
                type: object
                description: Label selector that specifies which pods are selected for this monitoring configuration.
                properties:
                  matchExpressions:
                    type: array
                    description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                    items:
                      type: object
                      description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                      properties:
                        key:
                          type: string
                          description: key is the label key that the selector applies to.
                        operator:
                          type: string
                          description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                        values:
                          type: array
                          description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                          items:
                            type: string
                      required:
                      - key
                      - operator
                  matchLabels:
                    type: object
                    additionalProperties:
                      type: string
                    description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                x-kubernetes-map-type: atomic
              endpoints:
                type: array
                description: The endpoints to scrape on the selected pods.
                items:
                  type: object
                  description: ScrapeEndpoint specifies a Prometheus metrics endpoint to scrape.
                  properties:
                    port:
                      anyOf:
                      - type: integer
                      - type: string
                      description: Name or number of the port to scrape.
                      x-kubernetes-int-or-string: true
                    interval:
                      type: string
                      description: Interval at which to scrape metrics. Must be a valid Prometheus duration.
                    metricRelabeling:
                      type: array
                      description: Relabeling rules for metrics scraped from this endpoint. Relabeling rules that override protected target labels (project_id, location, cluster, namespace, job, instance, or __address__) are not permitted. The labelmap action is not permitted in general.
                      items:
                        type: object
                        description: RelabelingRule defines a single Prometheus relabeling rule.
                        properties:
                          action:
                            type: string
                            description: Action to perform based on regex matching. Defaults to 'replace'.
                          modulus:
                            type: integer
                            description: Modulus to take of the hash of the source label values.
                            format: int64
                          regex:
                            type: string
                            description: Regular expression against which the extracted value is matched. Defaults to '(.*)'.
                          replacement:
                            type: string
                            description: Replacement value against which a regex replace is performed if the regular expression matches. Regex capture groups are available. Defaults to '$1'.
                          separator:
                            type: string
                            description: Separator placed between concatenated source label values. Defaults to ';'.
                          sourceLabels:
                            type: array
                            description: The source labels select values from existing labels. Their content is concatenated using the configured separator and matched against the configured regular expression for the replace, keep, and drop actions.
                            items:
                              type: string
                          targetLabel:
                            type: string
                            description: Label to which the resulting value is written in a replace action. It is mandatory for replace actions. Regex capture groups are available.
                    params:
                      type: object
                      additionalProperties:
                        type: array
                        items:
                          type: string
                      description: HTTP GET params to use when scraping.
                    path:
                      type: string
                      description: HTTP path to scrape metrics from. Defaults to "/metrics".
                    proxyUrl:
                      type: string
                      description: Proxy URL to scrape through. Encoded passwords are not supported.
                    scheme:
                      type: string
                      description: Protocol scheme to use to scrape.
                    timeout:
                      type: string
                      description: Timeout for metrics scrapes. Must be a valid Prometheus duration. Must not be larger then the scrape interval.
                  required:
                  - port
              limits:
                type: object
                description: Limits to apply at scrape time.
                properties:
                  labels:
                    type: integer
                    description: Maximum number of labels accepted for a single sample. Uses Prometheus default if left unspecified.
                    format: int64
                  labelNameLength:
                    type: integer
                    description: Maximum label name length. Uses Prometheus default if left unspecified.
                    format: int64
                  labelValueLength:
                    type: integer
                    description: Maximum label value length. Uses Prometheus default if left unspecified.
                    format: int64
                  samples:
                    type: integer
                    description: Maximum number of samples accepted within a single scrape. Uses Prometheus default if left unspecified.
                    format: int64
              targetLabels:
                type: object
                description: Labels to add to the Prometheus target for discovered endpoints
                properties:
                  metadata:
                    type: array
                    description: Pod metadata labels that are set on all scraped targets. Permitted keys are `pod`, `container`, and `node` for PodMonitoring and `pod`, `container`, `node`, and `namespace` for ClusterPodMonitoring. Defaults to [pod, container] for PodMonitoring and [namespace, pod, container] for ClusterPodMonitoring. If set to null, it will be interpreted as the empty list for PodMonitoring and to [namespace] for ClusterPodMonitoring. This is for backwards-compatibility only.
                    items:
                      type: string
                  fromPod:
                    type: array
                    description: Labels to transfer from the Kubernetes Pod to Prometheus target labels. Mappings are applied in order.
                    items:
                      type: object
                      description: LabelMapping specifies how to transfer a label from a Kubernetes resource onto a Prometheus target.
                      properties:
                        from:
                          type: string
                          description: Kubenetes resource label to remap.
                        to:
                          type: string
                          description: Remapped Prometheus target label. Defaults to the same name as `From`.
                      required:
                      - from
            required:
            - endpoints
            - selector
          status:
            type: object
            description: Most recently observed status of the resource.
            properties:
              conditions:
                type: array
                description: Represents the latest available observations of a podmonitor's current state.
                items:
                  type: object
                  description: MonitoringCondition describes a condition of a PodMonitoring.
                  properties:
                    type:
                      type: string
                      description: MonitoringConditionType is the type of MonitoringCondition.
                    status:
                      type: string
                      description: Status of the condition, one of True, False, Unknown.
                    lastTransitionTime:
                      type: string
                      description: Last time the condition transitioned from one status to another.
                      format: date-time
                    lastUpdateTime:
                      type: string
                      description: The last time this condition was updated.
                      format: date-time
                    message:
                      type: string
                      description: A human-readable message indicating details about the transition.
                    reason:
                      type: string
                      description: The reason for the condition's last transition.
                  required:
                  - status
                  - type
              observedGeneration:
                type: integer
                description: The generation observed by the controller.
                format: int64
        required:
        - spec
    served: true
    storage: false
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: clusterrules.monitoring.googleapis.com
  annotations:
    controller-gen.kubebuilder.io/version: v0.12.0
spec:
  group: monitoring.googleapis.com
  names:
    kind: ClusterRules
    listKind: ClusterRulesList
    plural: clusterrules
    singular: clusterrules
  scope: Cluster
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        type: object
        description: ClusterRules defines Prometheus alerting and recording rules that are scoped to the current cluster. Only metric data from the current cluster is processed and all rule results have their project_id and cluster label preserved for query processing. If the location label is not preserved by the rule, it defaults to the cluster's location.
        properties:
          apiVersion:
            type: string
            description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          kind:
            type: string
            description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          metadata:
            type: object
          spec:
            type: object
            description: Specification of rules to record and alert on.
            properties:
              groups:
                type: array
                description: A list of Prometheus rule groups.
                items:
                  type: object
                  description: 'RuleGroup declares rules in the Prometheus format: https://prometheus.io/docs/prometheus/latest/configuration/recording_rules/'
                  properties:
                    name:
                      type: string
                      description: The name of the rule group.
                    interval:
                      type: string
                      description: The interval at which to evaluate the rules. Must be a valid Prometheus duration.
                    rules:
                      type: array
                      description: A list of rules that are executed sequentially as part of this group.
                      items:
                        type: object
                        description: 'Rule is a single rule in the Prometheus format: https://prometheus.io/docs/prometheus/latest/configuration/recording_rules/'
                        properties:
                          labels:
                            type: object
                            additionalProperties:
                              type: string
                            description: A set of labels to attach to the result of the query expression.
                          annotations:
                            type: object
                            additionalProperties:
                              type: string
                            description: A set of annotations to attach to alerts produced by the query expression. Only valid if `alert` is set.
                          alert:
                            type: string
                            description: Name of the alert to evaluate the expression as. Only one of `record` and `alert` must be set.
                          expr:
                            type: string
                            description: The PromQL expression to evaluate.
                          for:
                            type: string
                            description: The duration to wait before a firing alert produced by this rule is sent to Alertmanager. Only valid if `alert` is set.
                          record:
                            type: string
                            description: Record the result of the expression to this metric name. Only one of `record` and `alert` must be set.
                        required:
                        - expr
                  required:
                  - interval
                  - name
                  - rules
            required:
            - groups
          status:
            type: object
            description: Most recently observed status of the resource.
        required:
        - spec
    served: true
    storage: true
    subresources:
      status: {}
  - name: v1alpha1
    deprecated: true
    schema:
      openAPIV3Schema:
        type: object
        description: ClusterRules defines Prometheus alerting and recording rules that are scoped to the current cluster. Only metric data from the current cluster is processed and all rule results have their project_id and cluster label preserved for query processing. If the location label is not preserved by the rule, it defaults to the cluster's location.
        properties:
          apiVersion:
            type: string
            description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          kind:
            type: string
            description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          metadata:
            type: object
          spec:
            type: object
            description: Specification of rules to record and alert on.
            properties:
              groups:
                type: array
                description: A list of Prometheus rule groups.
                items:
                  type: object
                  description: 'RuleGroup declares rules in the Prometheus format: https://prometheus.io/docs/prometheus/latest/configuration/recording_rules/'
                  properties:
                    name:
                      type: string
                      description: The name of the rule group.
                    interval:
                      type: string
                      description: The interval at which to evaluate the rules. Must be a valid Prometheus duration.
                    rules:
                      type: array
                      description: A list of rules that are executed sequentially as part of this group.
                      items:
                        type: object
                        description: 'Rule is a single rule in the Prometheus format: https://prometheus.io/docs/prometheus/latest/configuration/recording_rules/'
                        properties:
                          labels:
                            type: object
                            additionalProperties:
                              type: string
                            description: A set of labels to attach to the result of the query expression.
                          annotations:
                            type: object
                            additionalProperties:
                              type: string
                            description: A set of annotations to attach to alerts produced by the query expression. Only valid if `alert` is set.
                          alert:
                            type: string
                            description: Name of the alert to evaluate the expression as. Only one of `record` and `alert` must be set.
                          expr:
                            type: string
                            description: The PromQL expression to evaluate.
                          for:
                            type: string
                            description: The duration to wait before a firing alert produced by this rule is sent to Alertmanager. Only valid if `alert` is set.
                          record:
                            type: string
                            description: Record the result of the expression to this metric name. Only one of `record` and `alert` must be set.
                        required:
                        - expr
                  required:
                  - interval
                  - name
                  - rules
            required:
            - groups
          status:
            type: object
            description: Most recently observed status of the resource.
        required:
        - spec
    served: true
    storage: false
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: globalrules.monitoring.googleapis.com
  annotations:
    controller-gen.kubebuilder.io/version: v0.12.0
spec:
  group: monitoring.googleapis.com
  names:
    kind: GlobalRules
    listKind: GlobalRulesList
    plural: globalrules
    singular: globalrules
  scope: Cluster
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        type: object
        description: GlobalRules defines Prometheus alerting and recording rules that are scoped to all data in the queried project. If the project_id or location labels are not preserved by the rule, they default to the values of the cluster.
        properties:
          apiVersion:
            type: string
            description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          kind:
            type: string
            description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          metadata:
            type: object
          spec:
            type: object
            description: Specification of rules to record and alert on.
            properties:
              groups:
                type: array
                description: A list of Prometheus rule groups.
                items:
                  type: object
                  description: 'RuleGroup declares rules in the Prometheus format: https://prometheus.io/docs/prometheus/latest/configuration/recording_rules/'
                  properties:
                    name:
                      type: string
                      description: The name of the rule group.
                    interval:
                      type: string
                      description: The interval at which to evaluate the rules. Must be a valid Prometheus duration.
                    rules:
                      type: array
                      description: A list of rules that are executed sequentially as part of this group.
                      items:
                        type: object
                        description: 'Rule is a single rule in the Prometheus format: https://prometheus.io/docs/prometheus/latest/configuration/recording_rules/'
                        properties:
                          labels:
                            type: object
                            additionalProperties:
                              type: string
                            description: A set of labels to attach to the result of the query expression.
                          annotations:
                            type: object
                            additionalProperties:
                              type: string
                            description: A set of annotations to attach to alerts produced by the query expression. Only valid if `alert` is set.
                          alert:
                            type: string
                            description: Name of the alert to evaluate the expression as. Only one of `record` and `alert` must be set.
                          expr:
                            type: string
                            description: The PromQL expression to evaluate.
                          for:
                            type: string
                            description: The duration to wait before a firing alert produced by this rule is sent to Alertmanager. Only valid if `alert` is set.
                          record:
                            type: string
                            description: Record the result of the expression to this metric name. Only one of `record` and `alert` must be set.
                        required:
                        - expr
                  required:
                  - interval
                  - name
                  - rules
            required:
            - groups
          status:
            type: object
            description: Most recently observed status of the resource.
        required:
        - spec
    served: true
    storage: true
    subresources:
      status: {}
  - name: v1alpha1
    deprecated: true
    schema:
      openAPIV3Schema:
        type: object
        description: GlobalRules defines Prometheus alerting and recording rules that are scoped to all data in the queried project. If the project_id or location labels are not preserved by the rule, they default to the values of the cluster.
        properties:
          apiVersion:
            type: string
            description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          kind:
            type: string
            description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          metadata:
            type: object
          spec:
            type: object
            description: Specification of rules to record and alert on.
            properties:
              groups:
                type: array
                description: A list of Prometheus rule groups.
                items:
                  type: object
                  description: 'RuleGroup declares rules in the Prometheus format: https://prometheus.io/docs/prometheus/latest/configuration/recording_rules/'
                  properties:
                    name:
                      type: string
                      description: The name of the rule group.
                    interval:
                      type: string
                      description: The interval at which to evaluate the rules. Must be a valid Prometheus duration.
                    rules:
                      type: array
                      description: A list of rules that are executed sequentially as part of this group.
                      items:
                        type: object
                        description: 'Rule is a single rule in the Prometheus format: https://prometheus.io/docs/prometheus/latest/configuration/recording_rules/'
                        properties:
                          labels:
                            type: object
                            additionalProperties:
                              type: string
                            description: A set of labels to attach to the result of the query expression.
                          annotations:
                            type: object
                            additionalProperties:
                              type: string
                            description: A set of annotations to attach to alerts produced by the query expression. Only valid if `alert` is set.
                          alert:
                            type: string
                            description: Name of the alert to evaluate the expression as. Only one of `record` and `alert` must be set.
                          expr:
                            type: string
                            description: The PromQL expression to evaluate.
                          for:
                            type: string
                            description: The duration to wait before a firing alert produced by this rule is sent to Alertmanager. Only valid if `alert` is set.
                          record:
                            type: string
                            description: Record the result of the expression to this metric name. Only one of `record` and `alert` must be set.
                        required:
                        - expr
                  required:
                  - interval
                  - name
                  - rules
            required:
            - groups
          status:
            type: object
            description: Most recently observed status of the resource.
        required:
        - spec
    served: true
    storage: false
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: operatorconfigs.monitoring.googleapis.com
  annotations:
    controller-gen.kubebuilder.io/version: v0.12.0
spec:
  group: monitoring.googleapis.com
  names:
    kind: OperatorConfig
    listKind: OperatorConfigList
    plural: operatorconfigs
    singular: operatorconfig
  scope: Namespaced
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        type: object
        description: OperatorConfig defines configuration of the gmp-operator.
        properties:
          apiVersion:
            type: string
            description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          kind:
            type: string
            description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          metadata:
            type: object
          collection:
            type: object
            description: Collection specifies how the operator configures collection.
            properties:
              compression:
                type: string
                description: Compression enables compression of metrics collection data
                enum:
                - none
                - gzip
              credentials:
                type: object
                description: A reference to GCP service account credentials with which Prometheus collectors are run. It needs to have metric write permissions for all project IDs to which data is written. Within GKE, this can typically be left empty if the compute default service account has the required permissions.
                properties:
                  name:
                    type: string
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                  key:
                    type: string
                    description: The key of the secret to select from.  Must be a valid secret key.
                  optional:
                    type: boolean
                    description: Specify whether the Secret or its key must be defined
                required:
                - key
                x-kubernetes-map-type: atomic
              externalLabels:
                type: object
                additionalProperties:
                  type: string
                description: ExternalLabels specifies external labels that are attached to all scraped data before being written to Cloud Monitoring. The precedence behavior matches that of Prometheus.
              filter:
                type: object
                description: Filter limits which metric data is sent to Cloud Monitoring.
                properties:
                  matchOneOf:
                    type: array
                    description: 'A list Prometheus time series matchers. Every time series must match at least one of the matchers to be exported. This field can be used equivalently to the match[] parameter of the Prometheus federation endpoint to selectively export data. Example: `["{job!=''foobar''}", "{__name__!~''container_foo.*|container_bar.*''}"]`'
                    items:
                      type: string
              kubeletScraping:
                type: object
                description: Configuration to scrape the metric endpoints of the Kubelets.
                properties:
                  interval:
                    type: string
                    description: The interval at which the metric endpoints are scraped.
                required:
                - interval
          features:
            type: object
            description: Features holds configuration for optional managed-collection features.
            properties:
              config:
                type: object
                description: Settings for the collector configuration propagation.
                properties:
                  compression:
                    type: string
                    description: Compression enables compression of the config data propagated by the operator to collectors. It is recommended to use the gzip option when using a large number of ClusterPodMonitoring and/or PodMonitoring.
                    enum:
                    - none
                    - gzip
              targetStatus:
                type: object
                description: Configuration of target status reporting.
                properties:
                  enabled:
                    type: boolean
                    description: Enable target status reporting.
          managedAlertmanager:
            type: object
            default:
              configSecret:
                name: alertmanager
                key: alertmanager.yaml
            description: ManagedAlertmanager holds information for configuring the managed instance of Alertmanager.
            properties:
              configSecret:
                type: object
                description: ConfigSecret refers to the name of a single-key Secret in the public namespace that holds the managed Alertmanager config file.
                properties:
                  name:
                    type: string
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                  key:
                    type: string
                    description: The key of the secret to select from.  Must be a valid secret key.
                  optional:
                    type: boolean
                    description: Specify whether the Secret or its key must be defined
                required:
                - key
                x-kubernetes-map-type: atomic
          rules:
            type: object
            description: Rules specifies how the operator configures and deployes rule-evaluator.
            properties:
              alerting:
                type: object
                description: Alerting contains how the rule-evaluator configures alerting.
                properties:
                  alertmanagers:
                    type: array
                    description: Alertmanagers contains endpoint configuration for designated Alertmanagers.
                    items:
                      type: object
                      description: AlertmanagerEndpoints defines a selection of a single Endpoints object containing alertmanager IPs to fire alerts against.
                      properties:
                        name:
                          type: string
                          description: Name of Endpoints object in Namespace.
                        namespace:
                          type: string
                          description: Namespace of Endpoints object.
                        apiVersion:
                          type: string
                          description: Version of the Alertmanager API that rule-evaluator uses to send alerts. It can be "v1" or "v2".
                        port:
                          anyOf:
                          - type: integer
                          - type: string
                          description: Port the Alertmanager API is exposed on.
                          x-kubernetes-int-or-string: true
                        authorization:
                          type: object
                          description: Authorization section for this alertmanager endpoint
                          properties:
                            type:
                              type: string
                              description: Set the authentication type. Defaults to Bearer, Basic will cause an error
                            credentials:
                              type: object
                              description: The secret's key that contains the credentials of the request
                              properties:
                                name:
                                  type: string
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                key:
                                  type: string
                                  description: The key of the secret to select from.  Must be a valid secret key.
                                optional:
                                  type: boolean
                                  description: Specify whether the Secret or its key must be defined
                              required:
                              - key
                              x-kubernetes-map-type: atomic
                        pathPrefix:
                          type: string
                          description: Prefix for the HTTP path alerts are pushed to.
                        scheme:
                          type: string
                          description: Scheme to use when firing alerts.
                        timeout:
                          type: string
                          description: Timeout is a per-target Alertmanager timeout when pushing alerts.
                        tls:
                          type: object
                          description: TLS Config to use for alertmanager connection.
                          properties:
                            ca:
                              type: object
                              description: Struct containing the CA cert to use for the targets.
                              properties:
                                configMap:
                                  type: object
                                  description: ConfigMap containing data to use for the targets.
                                  properties:
                                    name:
                                      type: string
                                      description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                    key:
                                      type: string
                                      description: The key to select.
                                    optional:
                                      type: boolean
                                      description: Specify whether the ConfigMap or its key must be defined
                                  required:
                                  - key
                                  x-kubernetes-map-type: atomic
                                secret:
                                  type: object
                                  description: Secret containing data to use for the targets.
                                  properties:
                                    name:
                                      type: string
                                      description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                    key:
                                      type: string
                                      description: The key of the secret to select from.  Must be a valid secret key.
                                    optional:
                                      type: boolean
                                      description: Specify whether the Secret or its key must be defined
                                  required:
                                  - key
                                  x-kubernetes-map-type: atomic
                            cert:
                              type: object
                              description: Struct containing the client cert file for the targets.
                              properties:
                                configMap:
                                  type: object
                                  description: ConfigMap containing data to use for the targets.
                                  properties:
                                    name:
                                      type: string
                                      description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                    key:
                                      type: string
                                      description: The key to select.
                                    optional:
                                      type: boolean
                                      description: Specify whether the ConfigMap or its key must be defined
                                  required:
                                  - key
                                  x-kubernetes-map-type: atomic
                                secret:
                                  type: object
                                  description: Secret containing data to use for the targets.
                                  properties:
                                    name:
                                      type: string
                                      description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                    key:
                                      type: string
                                      description: The key of the secret to select from.  Must be a valid secret key.
                                    optional:
                                      type: boolean
                                      description: Specify whether the Secret or its key must be defined
                                  required:
                                  - key
                                  x-kubernetes-map-type: atomic
                            insecureSkipVerify:
                              type: boolean
                              description: Disable target certificate validation.
                            keySecret:
                              type: object
                              description: Secret containing the client key file for the targets.
                              properties:
                                name:
                                  type: string
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                key:
                                  type: string
                                  description: The key of the secret to select from.  Must be a valid secret key.
                                optional:
                                  type: boolean
                                  description: Specify whether the Secret or its key must be defined
                              required:
                              - key
                              x-kubernetes-map-type: atomic
                            maxVersion:
                              type: string
                              description: 'Maximum TLS version. Accepted values: TLS10 (TLS 1.0), TLS11 (TLS 1.1), TLS12 (TLS 1.2), TLS13 (TLS 1.3). If unset, Prometheus will use Go default minimum version, which is TLS 1.2. See MinVersion in https://pkg.go.dev/crypto/tls#Config.'
                            minVersion:
                              type: string
                              description: 'Minimum TLS version. Accepted values: TLS10 (TLS 1.0), TLS11 (TLS 1.1), TLS12 (TLS 1.2), TLS13 (TLS 1.3). If unset, Prometheus will use Go default minimum version, which is TLS 1.2. See MinVersion in https://pkg.go.dev/crypto/tls#Config.'
                            serverName:
                              type: string
                              description: Used to verify the hostname for the targets.
                      required:
                      - name
                      - namespace
                      - port
              credentials:
                type: object
                description: A reference to GCP service account credentials with which the rule evaluator container is run. It needs to have metric read permissions against queryProjectId and metric write permissions against all projects to which rule results are written. Within GKE, this can typically be left empty if the compute default service account has the required permissions.
                properties:
                  name:
                    type: string
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                  key:
                    type: string
                    description: The key of the secret to select from.  Must be a valid secret key.
                  optional:
                    type: boolean
                    description: Specify whether the Secret or its key must be defined
                required:
                - key
                x-kubernetes-map-type: atomic
              externalLabels:
                type: object
                additionalProperties:
                  type: string
                description: ExternalLabels specifies external labels that are attached to any rule results and alerts produced by rules. The precedence behavior matches that of Prometheus.
              generatorUrl:
                type: string
                description: The base URL used for the generator URL in the alert notification payload. Should point to an instance of a query frontend that gives access to queryProjectID.
              queryProjectID:
                type: string
                description: QueryProjectID is the GCP project ID to evaluate rules against. If left blank, the rule-evaluator will try attempt to infer the Project ID from the environment.
    served: true
    storage: true
  - name: v1alpha1
    deprecated: true
    schema:
      openAPIV3Schema:
        type: object
        description: OperatorConfig defines configuration of the gmp-operator.
        properties:
          apiVersion:
            type: string
            description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          kind:
            type: string
            description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          metadata:
            type: object
          collection:
            type: object
            description: Collection specifies how the operator configures collection.
            properties:
              credentials:
                type: object
                description: A reference to GCP service account credentials with which Prometheus collectors are run. It needs to have metric write permissions for all project IDs to which data is written. Within GKE, this can typically be left empty if the compute default service account has the required permissions.
                properties:
                  name:
                    type: string
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                  key:
                    type: string
                    description: The key of the secret to select from.  Must be a valid secret key.
                  optional:
                    type: boolean
                    description: Specify whether the Secret or its key must be defined
                required:
                - key
                x-kubernetes-map-type: atomic
              externalLabels:
                type: object
                additionalProperties:
                  type: string
                description: ExternalLabels specifies external labels that are attached to all scraped data before being written to Cloud Monitoring. The precedence behavior matches that of Prometheus.
              filter:
                type: object
                description: Filter limits which metric data is sent to Cloud Monitoring.
                properties:
                  matchOneOf:
                    type: array
                    description: 'A list Prometheus time series matchers. Every time series must match at least one of the matchers to be exported. This field can be used equivalently to the match[] parameter of the Prometheus federation endpoint to selectively export data. Example: `["{job=''prometheus''}", "{__name__=~''job:.*''}"]`'
                    items:
                      type: string
          rules:
            type: object
            description: Rules specifies how the operator configures and deployes rule-evaluator.
            properties:
              alerting:
                type: object
                description: Alerting contains how the rule-evaluator configures alerting.
                properties:
                  alertmanagers:
                    type: array
                    description: Alertmanagers contains endpoint configuration for designated Alertmanagers.
                    items:
                      type: object
                      description: AlertmanagerEndpoints defines a selection of a single Endpoints object containing alertmanager IPs to fire alerts against.
                      properties:
                        name:
                          type: string
                          description: Name of Endpoints object in Namespace.
                        namespace:
                          type: string
                          description: Namespace of Endpoints object.
                        apiVersion:
                          type: string
                          description: Version of the Alertmanager API that rule-evaluator uses to send alerts. It can be "v1" or "v2".
                        port:
                          anyOf:
                          - type: integer
                          - type: string
                          description: Port the Alertmanager API is exposed on.
                          x-kubernetes-int-or-string: true
                        authorization:
                          type: object
                          description: Authorization section for this alertmanager endpoint
                          properties:
                            type:
                              type: string
                              description: Set the authentication type. Defaults to Bearer, Basic will cause an error
                            credentials:
                              type: object
                              description: The secret's key that contains the credentials of the request
                              properties:
                                name:
                                  type: string
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                key:
                                  type: string
                                  description: The key of the secret to select from.  Must be a valid secret key.
                                optional:
                                  type: boolean
                                  description: Specify whether the Secret or its key must be defined
                              required:
                              - key
                              x-kubernetes-map-type: atomic
                        pathPrefix:
                          type: string
                          description: Prefix for the HTTP path alerts are pushed to.
                        scheme:
                          type: string
                          description: Scheme to use when firing alerts.
                        timeout:
                          type: string
                          description: Timeout is a per-target Alertmanager timeout when pushing alerts.
                        tls:
                          type: object
                          description: TLS Config to use for alertmanager connection.
                          properties:
                            ca:
                              type: object
                              description: Struct containing the CA cert to use for the targets.
                              properties:
                                configMap:
                                  type: object
                                  description: ConfigMap containing data to use for the targets.
                                  properties:
                                    name:
                                      type: string
                                      description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                    key:
                                      type: string
                                      description: The key to select.
                                    optional:
                                      type: boolean
                                      description: Specify whether the ConfigMap or its key must be defined
                                  required:
                                  - key
                                  x-kubernetes-map-type: atomic
                                secret:
                                  type: object
                                  description: Secret containing data to use for the targets.
                                  properties:
                                    name:
                                      type: string
                                      description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                    key:
                                      type: string
                                      description: The key of the secret to select from.  Must be a valid secret key.
                                    optional:
                                      type: boolean
                                      description: Specify whether the Secret or its key must be defined
                                  required:
                                  - key
                                  x-kubernetes-map-type: atomic
                            cert:
                              type: object
                              description: Struct containing the client cert file for the targets.
                              properties:
                                configMap:
                                  type: object
                                  description: ConfigMap containing data to use for the targets.
                                  properties:
                                    name:
                                      type: string
                                      description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                    key:
                                      type: string
                                      description: The key to select.
                                    optional:
                                      type: boolean
                                      description: Specify whether the ConfigMap or its key must be defined
                                  required:
                                  - key
                                  x-kubernetes-map-type: atomic
                                secret:
                                  type: object
                                  description: Secret containing data to use for the targets.
                                  properties:
                                    name:
                                      type: string
                                      description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                    key:
                                      type: string
                                      description: The key of the secret to select from.  Must be a valid secret key.
                                    optional:
                                      type: boolean
                                      description: Specify whether the Secret or its key must be defined
                                  required:
                                  - key
                                  x-kubernetes-map-type: atomic
                            insecureSkipVerify:
                              type: boolean
                              description: Disable target certificate validation.
                            keySecret:
                              type: object
                              description: Secret containing the client key file for the targets.
                              properties:
                                name:
                                  type: string
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                key:
                                  type: string
                                  description: The key of the secret to select from.  Must be a valid secret key.
                                optional:
                                  type: boolean
                                  description: Specify whether the Secret or its key must be defined
                              required:
                              - key
                              x-kubernetes-map-type: atomic
                            serverName:
                              type: string
                              description: Used to verify the hostname for the targets.
                      required:
                      - name
                      - namespace
                      - port
              credentials:
                type: object
                description: A reference to GCP service account credentials with which the rule evaluator container is run. It needs to have metric read permissions against queryProjectId and metric write permissions against all projects to which rule results are written. Within GKE, this can typically be left empty if the compute default service account has the required permissions.
                properties:
                  name:
                    type: string
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                  key:
                    type: string
                    description: The key of the secret to select from.  Must be a valid secret key.
                  optional:
                    type: boolean
                    description: Specify whether the Secret or its key must be defined
                required:
                - key
                x-kubernetes-map-type: atomic
              externalLabels:
                type: object
                additionalProperties:
                  type: string
                description: ExternalLabels specifies external labels that are attached to any rule results and alerts produced by rules. The precedence behavior matches that of Prometheus.
              queryProjectID:
                type: string
                description: QueryProjectID is the GCP project ID to evaluate rules against. If left blank, the rule-evaluator will try attempt to infer the Project ID from the environment.
    served: true
    storage: false
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: podmonitorings.monitoring.googleapis.com
  annotations:
    controller-gen.kubebuilder.io/version: v0.12.0
spec:
  group: monitoring.googleapis.com
  names:
    kind: PodMonitoring
    listKind: PodMonitoringList
    plural: podmonitorings
    singular: podmonitoring
  scope: Namespaced
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        type: object
        description: PodMonitoring defines monitoring for a set of pods, scoped to pods within the PodMonitoring's namespace.
        properties:
          apiVersion:
            type: string
            description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          kind:
            type: string
            description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          metadata:
            type: object
          spec:
            type: object
            description: Specification of desired Pod selection for target discovery by Prometheus.
            properties:
              selector:
                type: object
                description: Label selector that specifies which pods are selected for this monitoring configuration.
                properties:
                  matchExpressions:
                    type: array
                    description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                    items:
                      type: object
                      description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                      properties:
                        key:
                          type: string
                          description: key is the label key that the selector applies to.
                        operator:
                          type: string
                          description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                        values:
                          type: array
                          description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                          items:
                            type: string
                      required:
                      - key
                      - operator
                  matchLabels:
                    type: object
                    additionalProperties:
                      type: string
                    description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                x-kubernetes-map-type: atomic
              endpoints:
                type: array
                description: The endpoints to scrape on the selected pods.
                items:
                  type: object
                  description: ScrapeEndpoint specifies a Prometheus metrics endpoint to scrape.
                  properties:
                    port:
                      anyOf:
                      - type: integer
                      - type: string
                      description: Name or number of the port to scrape. The container metadata label is only populated if the port is referenced by name because port numbers are not unique across containers.
                      x-kubernetes-int-or-string: true
                    interval:
                      type: string
                      default: 1m
                      description: Interval at which to scrape metrics. Must be a valid Prometheus duration.
                      pattern: ^((([0-9]+)y)?(([0-9]+)w)?(([0-9]+)d)?(([0-9]+)h)?(([0-9]+)m)?(([0-9]+)s)?(([0-9]+)ms)?|0)$
                    metricRelabeling:
                      type: array
                      description: Relabeling rules for metrics scraped from this endpoint. Relabeling rules that override protected target labels (project_id, location, cluster, namespace, job, instance, or __address__) are not permitted. The labelmap action is not permitted in general.
                      items:
                        type: object
                        description: RelabelingRule defines a single Prometheus relabeling rule.
                        properties:
                          action:
                            type: string
                            description: Action to perform based on regex matching. Defaults to 'replace'.
                          modulus:
                            type: integer
                            description: Modulus to take of the hash of the source label values.
                            format: int64
                          regex:
                            type: string
                            description: Regular expression against which the extracted value is matched. Defaults to '(.*)'.
                          replacement:
                            type: string
                            description: Replacement value against which a regex replace is performed if the regular expression matches. Regex capture groups are available. Defaults to '$1'.
                          separator:
                            type: string
                            description: Separator placed between concatenated source label values. Defaults to ';'.
                          sourceLabels:
                            type: array
                            description: The source labels select values from existing labels. Their content is concatenated using the configured separator and matched against the configured regular expression for the replace, keep, and drop actions.
                            items:
                              type: string
                          targetLabel:
                            type: string
                            description: Label to which the resulting value is written in a replace action. It is mandatory for replace actions. Regex capture groups are available.
                    params:
                      type: object
                      additionalProperties:
                        type: array
                        items:
                          type: string
                      description: HTTP GET params to use when scraping.
                    path:
                      type: string
                      description: HTTP path to scrape metrics from. Defaults to "/metrics".
                    proxyUrl:
                      type: string
                      description: Proxy URL to scrape through. Encoded passwords are not supported.
                    scheme:
                      type: string
                      description: Protocol scheme to use to scrape.
                    timeout:
                      type: string
                      description: Timeout for metrics scrapes. Must be a valid Prometheus duration. Must not be larger then the scrape interval.
                    tls:
                      type: object
                      description: Configures the scrape request's TLS settings.
                      properties:
                        insecureSkipVerify:
                          type: boolean
                          description: Disable target certificate validation.
                        maxVersion:
                          type: string
                          description: 'Maximum TLS version. Accepted values: TLS10 (TLS 1.0), TLS11 (TLS 1.1), TLS12 (TLS 1.2), TLS13 (TLS 1.3). If unset, Prometheus will use Go default minimum version, which is TLS 1.2. See MinVersion in https://pkg.go.dev/crypto/tls#Config.'
                        minVersion:
                          type: string
                          description: 'Minimum TLS version. Accepted values: TLS10 (TLS 1.0), TLS11 (TLS 1.1), TLS12 (TLS 1.2), TLS13 (TLS 1.3). If unset, Prometheus will use Go default minimum version, which is TLS 1.2. See MinVersion in https://pkg.go.dev/crypto/tls#Config.'
                        serverName:
                          type: string
                          description: Used to verify the hostname for the targets.
                  required:
                  - port
              limits:
                type: object
                description: Limits to apply at scrape time.
                properties:
                  labels:
                    type: integer
                    description: Maximum number of labels accepted for a single sample. Uses Prometheus default if left unspecified.
                    format: int64
                  labelNameLength:
                    type: integer
                    description: Maximum label name length. Uses Prometheus default if left unspecified.
                    format: int64
                  labelValueLength:
                    type: integer
                    description: Maximum label value length. Uses Prometheus default if left unspecified.
                    format: int64
                  samples:
                    type: integer
                    description: Maximum number of samples accepted within a single scrape. Uses Prometheus default if left unspecified.
                    format: int64
              targetLabels:
                type: object
                description: Labels to add to the Prometheus target for discovered endpoints. The `instance` label is always set to `<pod_name>:<port>` or `<node_name>:<port>` if the scraped pod is controlled by a DaemonSet.
                properties:
                  metadata:
                    type: array
                    description: Pod metadata labels that are set on all scraped targets. Permitted keys are `pod`, `container`, and `node` for PodMonitoring and `pod`, `container`, `node`, and `namespace` for ClusterPodMonitoring. The `container` label is only populated if the scrape port is referenced by name. Defaults to [pod, container] for PodMonitoring and [namespace, pod, container] for ClusterPodMonitoring. If set to null, it will be interpreted as the empty list for PodMonitoring and to [namespace] for ClusterPodMonitoring. This is for backwards-compatibility only.
                    items:
                      type: string
                  fromPod:
                    type: array
                    description: Labels to transfer from the Kubernetes Pod to Prometheus target labels. Mappings are applied in order.
                    items:
                      type: object
                      description: LabelMapping specifies how to transfer a label from a Kubernetes resource onto a Prometheus target.
                      properties:
                        from:
                          type: string
                          description: Kubenetes resource label to remap.
                        to:
                          type: string
                          description: Remapped Prometheus target label. Defaults to the same name as `From`.
                      required:
                      - from
            required:
            - endpoints
            - selector
          status:
            type: object
            description: Most recently observed status of the resource.
            properties:
              conditions:
                type: array
                description: Represents the latest available observations of a podmonitor's current state.
                items:
                  type: object
                  description: MonitoringCondition describes a condition of a PodMonitoring.
                  properties:
                    type:
                      type: string
                      description: MonitoringConditionType is the type of MonitoringCondition.
                    status:
                      type: string
                      description: Status of the condition, one of True, False, Unknown.
                    lastTransitionTime:
                      type: string
                      description: Last time the condition transitioned from one status to another.
                      format: date-time
                    lastUpdateTime:
                      type: string
                      description: The last time this condition was updated.
                      format: date-time
                    message:
                      type: string
                      description: A human-readable message indicating details about the transition.
                    reason:
                      type: string
                      description: The reason for the condition's last transition.
                  required:
                  - status
                  - type
              endpointStatuses:
                type: array
                description: Represents the latest available observations of target state for each ScrapeEndpoint.
                items:
                  type: object
                  properties:
                    name:
                      type: string
                      description: The name of the ScrapeEndpoint.
                    activeTargets:
                      type: integer
                      description: Total number of active targets.
                      format: int64
                    collectorsFraction:
                      type: string
                      description: Fraction of collectors included in status, bounded [0,1]. Ideally, this should always be 1. Anything less can be considered a problem and should be investigated.
                    lastUpdateTime:
                      type: string
                      description: Last time this status was updated.
                      format: date-time
                    sampleGroups:
                      type: array
                      description: A fixed sample of targets grouped by error type.
                      items:
                        type: object
                        properties:
                          count:
                            type: integer
                            description: Total count of similar errors.
                            format: int32
                          sampleTargets:
                            type: array
                            description: Targets emitting the error message.
                            items:
                              type: object
                              properties:
                                labels:
                                  type: object
                                  additionalProperties:
                                    type: string
                                    description: A LabelValue is an associated value for a LabelName.
                                  description: The label set, keys and values, of the target.
                                health:
                                  type: string
                                  description: Health status.
                                lastError:
                                  type: string
                                  description: Error message.
                                lastScrapeDurationSeconds:
                                  type: string
                                  description: Scrape duration in seconds.
                    unhealthyTargets:
                      type: integer
                      description: Total number of active, unhealthy targets.
                      format: int64
                  required:
                  - name
              observedGeneration:
                type: integer
                description: The generation observed by the controller.
                format: int64
        required:
        - spec
    served: true
    storage: true
    subresources:
      status: {}
  - name: v1alpha1
    deprecated: true
    schema:
      openAPIV3Schema:
        type: object
        description: PodMonitoring defines monitoring for a set of pods.
        properties:
          apiVersion:
            type: string
            description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          kind:
            type: string
            description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          metadata:
            type: object
          spec:
            type: object
            description: Specification of desired Pod selection for target discovery by Prometheus.
            properties:
              selector:
                type: object
                description: Label selector that specifies which pods are selected for this monitoring configuration.
                properties:
                  matchExpressions:
                    type: array
                    description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                    items:
                      type: object
                      description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                      properties:
                        key:
                          type: string
                          description: key is the label key that the selector applies to.
                        operator:
                          type: string
                          description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                        values:
                          type: array
                          description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                          items:
                            type: string
                      required:
                      - key
                      - operator
                  matchLabels:
                    type: object
                    additionalProperties:
                      type: string
                    description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                x-kubernetes-map-type: atomic
              endpoints:
                type: array
                description: The endpoints to scrape on the selected pods.
                items:
                  type: object
                  description: ScrapeEndpoint specifies a Prometheus metrics endpoint to scrape.
                  properties:
                    port:
                      anyOf:
                      - type: integer
                      - type: string
                      description: Name or number of the port to scrape.
                      x-kubernetes-int-or-string: true
                    interval:
                      type: string
                      description: Interval at which to scrape metrics. Must be a valid Prometheus duration.
                    metricRelabeling:
                      type: array
                      description: Relabeling rules for metrics scraped from this endpoint. Relabeling rules that override protected target labels (project_id, location, cluster, namespace, job, instance, or __address__) are not permitted. The labelmap action is not permitted in general.
                      items:
                        type: object
                        description: RelabelingRule defines a single Prometheus relabeling rule.
                        properties:
                          action:
                            type: string
                            description: Action to perform based on regex matching. Defaults to 'replace'.
                          modulus:
                            type: integer
                            description: Modulus to take of the hash of the source label values.
                            format: int64
                          regex:
                            type: string
                            description: Regular expression against which the extracted value is matched. Defaults to '(.*)'.
                          replacement:
                            type: string
                            description: Replacement value against which a regex replace is performed if the regular expression matches. Regex capture groups are available. Defaults to '$1'.
                          separator:
                            type: string
                            description: Separator placed between concatenated source label values. Defaults to ';'.
                          sourceLabels:
                            type: array
                            description: The source labels select values from existing labels. Their content is concatenated using the configured separator and matched against the configured regular expression for the replace, keep, and drop actions.
                            items:
                              type: string
                          targetLabel:
                            type: string
                            description: Label to which the resulting value is written in a replace action. It is mandatory for replace actions. Regex capture groups are available.
                    params:
                      type: object
                      additionalProperties:
                        type: array
                        items:
                          type: string
                      description: HTTP GET params to use when scraping.
                    path:
                      type: string
                      description: HTTP path to scrape metrics from. Defaults to "/metrics".
                    proxyUrl:
                      type: string
                      description: Proxy URL to scrape through. Encoded passwords are not supported.
                    scheme:
                      type: string
                      description: Protocol scheme to use to scrape.
                    timeout:
                      type: string
                      description: Timeout for metrics scrapes. Must be a valid Prometheus duration. Must not be larger then the scrape interval.
                  required:
                  - port
              limits:
                type: object
                description: Limits to apply at scrape time.
                properties:
                  labels:
                    type: integer
                    description: Maximum number of labels accepted for a single sample. Uses Prometheus default if left unspecified.
                    format: int64
                  labelNameLength:
                    type: integer
                    description: Maximum label name length. Uses Prometheus default if left unspecified.
                    format: int64
                  labelValueLength:
                    type: integer
                    description: Maximum label value length. Uses Prometheus default if left unspecified.
                    format: int64
                  samples:
                    type: integer
                    description: Maximum number of samples accepted within a single scrape. Uses Prometheus default if left unspecified.
                    format: int64
              targetLabels:
                type: object
                description: Labels to add to the Prometheus target for discovered endpoints.
                properties:
                  metadata:
                    type: array
                    description: Pod metadata labels that are set on all scraped targets. Permitted keys are `pod`, `container`, and `node` for PodMonitoring and `pod`, `container`, `node`, and `namespace` for ClusterPodMonitoring. Defaults to [pod, container] for PodMonitoring and [namespace, pod, container] for ClusterPodMonitoring. If set to null, it will be interpreted as the empty list for PodMonitoring and to [namespace] for ClusterPodMonitoring. This is for backwards-compatibility only.
                    items:
                      type: string
                  fromPod:
                    type: array
                    description: Labels to transfer from the Kubernetes Pod to Prometheus target labels. Mappings are applied in order.
                    items:
                      type: object
                      description: LabelMapping specifies how to transfer a label from a Kubernetes resource onto a Prometheus target.
                      properties:
                        from:
                          type: string
                          description: Kubenetes resource label to remap.
                        to:
                          type: string
                          description: Remapped Prometheus target label. Defaults to the same name as `From`.
                      required:
                      - from
            required:
            - endpoints
            - selector
          status:
            type: object
            description: Most recently observed status of the resource.
            properties:
              conditions:
                type: array
                description: Represents the latest available observations of a podmonitor's current state.
                items:
                  type: object
                  description: MonitoringCondition describes a condition of a PodMonitoring.
                  properties:
                    type:
                      type: string
                      description: MonitoringConditionType is the type of MonitoringCondition.
                    status:
                      type: string
                      description: Status of the condition, one of True, False, Unknown.
                    lastTransitionTime:
                      type: string
                      description: Last time the condition transitioned from one status to another.
                      format: date-time
                    lastUpdateTime:
                      type: string
                      description: The last time this condition was updated.
                      format: date-time
                    message:
                      type: string
                      description: A human-readable message indicating details about the transition.
                    reason:
                      type: string
                      description: The reason for the condition's last transition.
                  required:
                  - status
                  - type
              observedGeneration:
                type: integer
                description: The generation observed by the controller.
                format: int64
        required:
        - spec
    served: true
    storage: false
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: rules.monitoring.googleapis.com
  annotations:
    controller-gen.kubebuilder.io/version: v0.12.0
spec:
  group: monitoring.googleapis.com
  names:
    kind: Rules
    listKind: RulesList
    plural: rules
    singular: rules
  scope: Namespaced
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        type: object
        description: Rules defines Prometheus alerting and recording rules that are scoped to the namespace of the resource. Only metric data from this namespace is processed and all rule results have their project_id, cluster, and namespace label preserved for query processing. If the location label is not preserved by the rule, it defaults to the cluster's location.
        properties:
          apiVersion:
            type: string
            description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          kind:
            type: string
            description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          metadata:
            type: object
          spec:
            type: object
            description: Specification of rules to record and alert on.
            properties:
              groups:
                type: array
                description: A list of Prometheus rule groups.
                items:
                  type: object
                  description: 'RuleGroup declares rules in the Prometheus format: https://prometheus.io/docs/prometheus/latest/configuration/recording_rules/'
                  properties:
                    name:
                      type: string
                      description: The name of the rule group.
                    interval:
                      type: string
                      description: The interval at which to evaluate the rules. Must be a valid Prometheus duration.
                    rules:
                      type: array
                      description: A list of rules that are executed sequentially as part of this group.
                      items:
                        type: object
                        description: 'Rule is a single rule in the Prometheus format: https://prometheus.io/docs/prometheus/latest/configuration/recording_rules/'
                        properties:
                          labels:
                            type: object
                            additionalProperties:
                              type: string
                            description: A set of labels to attach to the result of the query expression.
                          annotations:
                            type: object
                            additionalProperties:
                              type: string
                            description: A set of annotations to attach to alerts produced by the query expression. Only valid if `alert` is set.
                          alert:
                            type: string
                            description: Name of the alert to evaluate the expression as. Only one of `record` and `alert` must be set.
                          expr:
                            type: string
                            description: The PromQL expression to evaluate.
                          for:
                            type: string
                            description: The duration to wait before a firing alert produced by this rule is sent to Alertmanager. Only valid if `alert` is set.
                          record:
                            type: string
                            description: Record the result of the expression to this metric name. Only one of `record` and `alert` must be set.
                        required:
                        - expr
                  required:
                  - interval
                  - name
                  - rules
            required:
            - groups
          status:
            type: object
            description: Most recently observed status of the resource.
        required:
        - spec
    served: true
    storage: true
    subresources:
      status: {}
  - name: v1alpha1
    deprecated: true
    schema:
      openAPIV3Schema:
        type: object
        description: Rules defines Prometheus alerting and recording rules that are scoped to the namespace of the resource. Only metric data from this namespace is processed and all rule results have their project_id, cluster, and namespace label preserved for query processing. If the location label is not preserved by the rule, it defaults to the cluster's location.
        properties:
          apiVersion:
            type: string
            description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          kind:
            type: string
            description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          metadata:
            type: object
          spec:
            type: object
            description: Specification of rules to record and alert on.
            properties:
              groups:
                type: array
                description: A list of Prometheus rule groups.
                items:
                  type: object
                  description: 'RuleGroup declares rules in the Prometheus format: https://prometheus.io/docs/prometheus/latest/configuration/recording_rules/'
                  properties:
                    name:
                      type: string
                      description: The name of the rule group.
                    interval:
                      type: string
                      description: The interval at which to evaluate the rules. Must be a valid Prometheus duration.
                    rules:
                      type: array
                      description: A list of rules that are executed sequentially as part of this group.
                      items:
                        type: object
                        description: 'Rule is a single rule in the Prometheus format: https://prometheus.io/docs/prometheus/latest/configuration/recording_rules/'
                        properties:
                          labels:
                            type: object
                            additionalProperties:
                              type: string
                            description: A set of labels to attach to the result of the query expression.
                          annotations:
                            type: object
                            additionalProperties:
                              type: string
                            description: A set of annotations to attach to alerts produced by the query expression. Only valid if `alert` is set.
                          alert:
                            type: string
                            description: Name of the alert to evaluate the expression as. Only one of `record` and `alert` must be set.
                          expr:
                            type: string
                            description: The PromQL expression to evaluate.
                          for:
                            type: string
                            description: The duration to wait before a firing alert produced by this rule is sent to Alertmanager. Only valid if `alert` is set.
                          record:
                            type: string
                            description: Record the result of the expression to this metric name. Only one of `record` and `alert` must be set.
                        required:
                        - expr
                  required:
                  - interval
                  - name
                  - rules
            required:
            - groups
          status:
            type: object
            description: Most recently observed status of the resource.
        required:
        - spec
    served: true
    storage: false
    subresources:
      status: {}
