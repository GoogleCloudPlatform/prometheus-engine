# Copyright 2021 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is autogenerated.
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.7.0
  creationTimestamp: null
  name: clusterpodmonitorings.monitoring.googleapis.com
spec:
  group: monitoring.googleapis.com
  names:
    kind: ClusterPodMonitoring
    listKind: ClusterPodMonitoringList
    plural: clusterpodmonitorings
    singular: clusterpodmonitoring
  scope: Cluster
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: ClusterPodMonitoring defines monitoring for a set of pods.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: Specification of desired Pod selection for target discovery
              by Prometheus.
            properties:
              endpoints:
                description: The endpoints to scrape on the selected pods.
                items:
                  description: ScrapeEndpoint specifies a Prometheus metrics endpoint
                    to scrape.
                  properties:
                    interval:
                      description: Interval at which to scrape metrics. Must be a
                        valid Prometheus duration.
                      type: string
                    metricRelabeling:
                      description: Relabeling rules for metrics scraped from this
                        endpoint. Relabeling rules that override protected target
                        labels (project_id, location, cluster, namespace, job, instance,
                        or __address__) are not permitted. The labelmap action is
                        not permitted in general.
                      items:
                        description: RelabelingRule defines a single Prometheus relabeling
                          rule.
                        properties:
                          action:
                            description: Action to perform based on regex matching.
                              Defaults to 'replace'.
                            type: string
                          modulus:
                            description: Modulus to take of the hash of the source
                              label values.
                            format: int64
                            type: integer
                          regex:
                            description: Regular expression against which the extracted
                              value is matched. Defaults to '(.*)'.
                            type: string
                          replacement:
                            description: Replacement value against which a regex replace
                              is performed if the regular expression matches. Regex
                              capture groups are available. Defaults to '$1'.
                            type: string
                          separator:
                            description: Separator placed between concatenated source
                              label values. Defaults to ';'.
                            type: string
                          sourceLabels:
                            description: The source labels select values from existing
                              labels. Their content is concatenated using the configured
                              separator and matched against the configured regular
                              expression for the replace, keep, and drop actions.
                            items:
                              type: string
                            type: array
                          targetLabel:
                            description: Label to which the resulting value is written
                              in a replace action. It is mandatory for replace actions.
                              Regex capture groups are available.
                            type: string
                        type: object
                      type: array
                    params:
                      additionalProperties:
                        items:
                          type: string
                        type: array
                      description: HTTP GET params to use when scraping.
                      type: object
                    path:
                      description: HTTP path to scrape metrics from. Defaults to "/metrics".
                      type: string
                    port:
                      anyOf:
                      - type: integer
                      - type: string
                      description: Name or number of the port to scrape. If the specified
                        port is numeric, the selected pod must either not declare
                        any ports in its spec or declare the specified port number
                        as well.
                      x-kubernetes-int-or-string: true
                    proxyUrl:
                      description: Proxy URL to scrape through. Encoded passwords
                        are not supported.
                      type: string
                    scheme:
                      description: Protocol scheme to use to scrape.
                      type: string
                    timeout:
                      description: Timeout for metrics scrapes. Must be a valid Prometheus
                        duration. Must not be larger then the scrape interval.
                      type: string
                  required:
                  - port
                  type: object
                type: array
              limits:
                description: Limits to apply at scrape time.
                properties:
                  labelNameLength:
                    description: Maximum label name length. Uses Prometheus default
                      if left unspecified.
                    format: int64
                    type: integer
                  labelValueLength:
                    description: Maximum label value length. Uses Prometheus default
                      if left unspecified.
                    format: int64
                    type: integer
                  labels:
                    description: Maximum number of labels accepted for a single sample.
                      Uses Prometheus default if left unspecified.
                    format: int64
                    type: integer
                  samples:
                    description: Maximum number of samples accepted within a single
                      scrape. Uses Prometheus default if left unspecified.
                    format: int64
                    type: integer
                type: object
              selector:
                description: Label selector that specifies which pods are selected
                  for this monitoring configuration.
                properties:
                  matchExpressions:
                    description: matchExpressions is a list of label selector requirements.
                      The requirements are ANDed.
                    items:
                      description: A label selector requirement is a selector that
                        contains values, a key, and an operator that relates the key
                        and values.
                      properties:
                        key:
                          description: key is the label key that the selector applies
                            to.
                          type: string
                        operator:
                          description: operator represents a key's relationship to
                            a set of values. Valid operators are In, NotIn, Exists
                            and DoesNotExist.
                          type: string
                        values:
                          description: values is an array of string values. If the
                            operator is In or NotIn, the values array must be non-empty.
                            If the operator is Exists or DoesNotExist, the values
                            array must be empty. This array is replaced during a strategic
                            merge patch.
                          items:
                            type: string
                          type: array
                      required:
                      - key
                      - operator
                      type: object
                    type: array
                  matchLabels:
                    additionalProperties:
                      type: string
                    description: matchLabels is a map of {key,value} pairs. A single
                      {key,value} in the matchLabels map is equivalent to an element
                      of matchExpressions, whose key field is "key", the operator
                      is "In", and the values array contains only "value". The requirements
                      are ANDed.
                    type: object
                type: object
              targetLabels:
                description: Labels to add to the Prometheus target for discovered
                  endpoints
                properties:
                  fromPod:
                    description: Labels to transfer from the Kubernetes Pod to Prometheus
                      target labels. Mappings are applied in order.
                    items:
                      description: LabelMapping specifies how to transfer a label
                        from a Kubernetes resource onto a Prometheus target.
                      properties:
                        from:
                          description: Kubenetes resource label to remap.
                          type: string
                        to:
                          description: Remapped Prometheus target label. Defaults
                            to the same name as `From`.
                          type: string
                      required:
                      - from
                      type: object
                    type: array
                  metadata:
                    description: Pod metadata labels that are set on all scraped targets.
                      Permitted keys are `pod`, `container`, and `node` for PodMonitoring
                      and `pod`, `container`, `node`, and `namespace` for ClusterPodMonitoring.
                      Defaults to [pod, container] for PodMonitoring and [namespace,
                      pod, container] for ClusterPodMonitoring. If set to null, it
                      will be interpreted as the empty list for PodMonitoring and
                      to [namespace] for ClusterPodMonitoring. This is for backwards-compatibility
                      only.
                    items:
                      type: string
                    type: array
                type: object
            required:
            - endpoints
            - selector
            type: object
          status:
            description: Most recently observed status of the resource.
            properties:
              conditions:
                description: Represents the latest available observations of a podmonitor's
                  current state.
                items:
                  description: MonitoringCondition describes a condition of a PodMonitoring.
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another.
                      format: date-time
                      type: string
                    lastUpdateTime:
                      description: The last time this condition was updated.
                      format: date-time
                      type: string
                    message:
                      description: A human-readable message indicating details about
                        the transition.
                      type: string
                    reason:
                      description: The reason for the condition's last transition.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: MonitoringConditionType is the type of MonitoringCondition.
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: The generation observed by the controller.
                format: int64
                type: integer
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: ClusterPodMonitoring defines monitoring for a set of pods.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: Specification of desired Pod selection for target discovery
              by Prometheus.
            properties:
              endpoints:
                description: The endpoints to scrape on the selected pods.
                items:
                  description: ScrapeEndpoint specifies a Prometheus metrics endpoint
                    to scrape.
                  properties:
                    interval:
                      description: Interval at which to scrape metrics. Must be a
                        valid Prometheus duration.
                      type: string
                    metricRelabeling:
                      description: Relabeling rules for metrics scraped from this
                        endpoint. Relabeling rules that override protected target
                        labels (project_id, location, cluster, namespace, job, instance,
                        or __address__) are not permitted. The labelmap action is
                        not permitted in general.
                      items:
                        description: RelabelingRule defines a single Prometheus relabeling
                          rule.
                        properties:
                          action:
                            description: Action to perform based on regex matching.
                              Defaults to 'replace'.
                            type: string
                          modulus:
                            description: Modulus to take of the hash of the source
                              label values.
                            format: int64
                            type: integer
                          regex:
                            description: Regular expression against which the extracted
                              value is matched. Defaults to '(.*)'.
                            type: string
                          replacement:
                            description: Replacement value against which a regex replace
                              is performed if the regular expression matches. Regex
                              capture groups are available. Defaults to '$1'.
                            type: string
                          separator:
                            description: Separator placed between concatenated source
                              label values. Defaults to ';'.
                            type: string
                          sourceLabels:
                            description: The source labels select values from existing
                              labels. Their content is concatenated using the configured
                              separator and matched against the configured regular
                              expression for the replace, keep, and drop actions.
                            items:
                              type: string
                            type: array
                          targetLabel:
                            description: Label to which the resulting value is written
                              in a replace action. It is mandatory for replace actions.
                              Regex capture groups are available.
                            type: string
                        type: object
                      type: array
                    params:
                      additionalProperties:
                        items:
                          type: string
                        type: array
                      description: HTTP GET params to use when scraping.
                      type: object
                    path:
                      description: HTTP path to scrape metrics from. Defaults to "/metrics".
                      type: string
                    port:
                      anyOf:
                      - type: integer
                      - type: string
                      description: Name or number of the port to scrape.
                      x-kubernetes-int-or-string: true
                    proxyUrl:
                      description: Proxy URL to scrape through. Encoded passwords
                        are not supported.
                      type: string
                    scheme:
                      description: Protocol scheme to use to scrape.
                      type: string
                    timeout:
                      description: Timeout for metrics scrapes. Must be a valid Prometheus
                        duration. Must not be larger then the scrape interval.
                      type: string
                  required:
                  - port
                  type: object
                type: array
              limits:
                description: Limits to apply at scrape time.
                properties:
                  labelNameLength:
                    description: Maximum label name length. Uses Prometheus default
                      if left unspecified.
                    format: int64
                    type: integer
                  labelValueLength:
                    description: Maximum label value length. Uses Prometheus default
                      if left unspecified.
                    format: int64
                    type: integer
                  labels:
                    description: Maximum number of labels accepted for a single sample.
                      Uses Prometheus default if left unspecified.
                    format: int64
                    type: integer
                  samples:
                    description: Maximum number of samples accepted within a single
                      scrape. Uses Prometheus default if left unspecified.
                    format: int64
                    type: integer
                type: object
              selector:
                description: Label selector that specifies which pods are selected
                  for this monitoring configuration.
                properties:
                  matchExpressions:
                    description: matchExpressions is a list of label selector requirements.
                      The requirements are ANDed.
                    items:
                      description: A label selector requirement is a selector that
                        contains values, a key, and an operator that relates the key
                        and values.
                      properties:
                        key:
                          description: key is the label key that the selector applies
                            to.
                          type: string
                        operator:
                          description: operator represents a key's relationship to
                            a set of values. Valid operators are In, NotIn, Exists
                            and DoesNotExist.
                          type: string
                        values:
                          description: values is an array of string values. If the
                            operator is In or NotIn, the values array must be non-empty.
                            If the operator is Exists or DoesNotExist, the values
                            array must be empty. This array is replaced during a strategic
                            merge patch.
                          items:
                            type: string
                          type: array
                      required:
                      - key
                      - operator
                      type: object
                    type: array
                  matchLabels:
                    additionalProperties:
                      type: string
                    description: matchLabels is a map of {key,value} pairs. A single
                      {key,value} in the matchLabels map is equivalent to an element
                      of matchExpressions, whose key field is "key", the operator
                      is "In", and the values array contains only "value". The requirements
                      are ANDed.
                    type: object
                type: object
              targetLabels:
                description: Labels to add to the Prometheus target for discovered
                  endpoints
                properties:
                  fromPod:
                    description: Labels to transfer from the Kubernetes Pod to Prometheus
                      target labels. Mappings are applied in order.
                    items:
                      description: LabelMapping specifies how to transfer a label
                        from a Kubernetes resource onto a Prometheus target.
                      properties:
                        from:
                          description: Kubenetes resource label to remap.
                          type: string
                        to:
                          description: Remapped Prometheus target label. Defaults
                            to the same name as `From`.
                          type: string
                      required:
                      - from
                      type: object
                    type: array
                  metadata:
                    description: Pod metadata labels that are set on all scraped targets.
                      Permitted keys are `pod`, `container`, and `node` for PodMonitoring
                      and `pod`, `container`, `node`, and `namespace` for ClusterPodMonitoring.
                      Defaults to [pod, container] for PodMonitoring and [namespace,
                      pod, container] for ClusterPodMonitoring. If set to null, it
                      will be interpreted as the empty list for PodMonitoring and
                      to [namespace] for ClusterPodMonitoring. This is for backwards-compatibility
                      only.
                    items:
                      type: string
                    type: array
                type: object
            required:
            - endpoints
            - selector
            type: object
          status:
            description: Most recently observed status of the resource.
            properties:
              conditions:
                description: Represents the latest available observations of a podmonitor's
                  current state.
                items:
                  description: MonitoringCondition describes a condition of a PodMonitoring.
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another.
                      format: date-time
                      type: string
                    lastUpdateTime:
                      description: The last time this condition was updated.
                      format: date-time
                      type: string
                    message:
                      description: A human-readable message indicating details about
                        the transition.
                      type: string
                    reason:
                      description: The reason for the condition's last transition.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: MonitoringConditionType is the type of MonitoringCondition.
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: The generation observed by the controller.
                format: int64
                type: integer
            type: object
        required:
        - spec
        type: object
    served: true
    storage: false
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.7.0
  creationTimestamp: null
  name: clusterrules.monitoring.googleapis.com
spec:
  group: monitoring.googleapis.com
  names:
    kind: ClusterRules
    listKind: ClusterRulesList
    plural: clusterrules
    singular: clusterrules
  scope: Cluster
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: ClusterRules defines Prometheus alerting and recording rules
          that are scoped to the current cluster. Only metric data from the current
          cluster is processed and all rule results have their project_id and cluster
          label preserved for query processing. If the location label is not preserved
          by the rule, it defaults to the cluster's location.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: Specification of rules to record and alert on.
            properties:
              groups:
                description: A list of Prometheus rule groups.
                items:
                  description: 'RuleGroup declares rules in the Prometheus format:
                    https://prometheus.io/docs/prometheus/latest/configuration/recording_rules/'
                  properties:
                    interval:
                      description: The interval at which to evaluate the rules. Must
                        be a valid Prometheus duration.
                      type: string
                    name:
                      description: The name of the rule group.
                      type: string
                    rules:
                      description: A list of rules that are executed sequentially
                        as part of this group.
                      items:
                        description: 'Rule is a single rule in the Prometheus format:
                          https://prometheus.io/docs/prometheus/latest/configuration/recording_rules/'
                        properties:
                          alert:
                            description: Name of the alert to evaluate the expression
                              as. Only one of `record` and `alert` must be set.
                            type: string
                          annotations:
                            additionalProperties:
                              type: string
                            description: A set of annotations to attach to alerts
                              produced by the query expression. Only valid if `alert`
                              is set.
                            type: object
                          expr:
                            description: The PromQL expression to evaluate.
                            type: string
                          for:
                            description: The duration to wait before a firing alert
                              produced by this rule is sent to Alertmanager. Only
                              valid if `alert` is set.
                            type: string
                          labels:
                            additionalProperties:
                              type: string
                            description: A set of labels to attach to the result of
                              the query expression.
                            type: object
                          record:
                            description: Record the result of the expression to this
                              metric name. Only one of `record` and `alert` must be
                              set.
                            type: string
                        required:
                        - expr
                        type: object
                      type: array
                  required:
                  - interval
                  - name
                  - rules
                  type: object
                type: array
            required:
            - groups
            type: object
          status:
            description: Most recently observed status of the resource.
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: ClusterRules defines Prometheus alerting and recording rules
          that are scoped to the current cluster. Only metric data from the current
          cluster is processed and all rule results have their project_id and cluster
          label preserved for query processing. If the location label is not preserved
          by the rule, it defaults to the cluster's location.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: Specification of rules to record and alert on.
            properties:
              groups:
                description: A list of Prometheus rule groups.
                items:
                  description: 'RuleGroup declares rules in the Prometheus format:
                    https://prometheus.io/docs/prometheus/latest/configuration/recording_rules/'
                  properties:
                    interval:
                      description: The interval at which to evaluate the rules. Must
                        be a valid Prometheus duration.
                      type: string
                    name:
                      description: The name of the rule group.
                      type: string
                    rules:
                      description: A list of rules that are executed sequentially
                        as part of this group.
                      items:
                        description: 'Rule is a single rule in the Prometheus format:
                          https://prometheus.io/docs/prometheus/latest/configuration/recording_rules/'
                        properties:
                          alert:
                            description: Name of the alert to evaluate the expression
                              as. Only one of `record` and `alert` must be set.
                            type: string
                          annotations:
                            additionalProperties:
                              type: string
                            description: A set of annotations to attach to alerts
                              produced by the query expression. Only valid if `alert`
                              is set.
                            type: object
                          expr:
                            description: The PromQL expression to evaluate.
                            type: string
                          for:
                            description: The duration to wait before a firing alert
                              produced by this rule is sent to Alertmanager. Only
                              valid if `alert` is set.
                            type: string
                          labels:
                            additionalProperties:
                              type: string
                            description: A set of labels to attach to the result of
                              the query expression.
                            type: object
                          record:
                            description: Record the result of the expression to this
                              metric name. Only one of `record` and `alert` must be
                              set.
                            type: string
                        required:
                        - expr
                        type: object
                      type: array
                  required:
                  - interval
                  - name
                  - rules
                  type: object
                type: array
            required:
            - groups
            type: object
          status:
            description: Most recently observed status of the resource.
            type: object
        required:
        - spec
        type: object
    served: true
    storage: false
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.7.0
  creationTimestamp: null
  name: globalrules.monitoring.googleapis.com
spec:
  group: monitoring.googleapis.com
  names:
    kind: GlobalRules
    listKind: GlobalRulesList
    plural: globalrules
    singular: globalrules
  scope: Cluster
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: GlobalRules defines Prometheus alerting and recording rules that
          are scoped to all data in the queried project. If the project_id or location
          labels are not preserved by the rule, they default to the values of the
          cluster.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: Specification of rules to record and alert on.
            properties:
              groups:
                description: A list of Prometheus rule groups.
                items:
                  description: 'RuleGroup declares rules in the Prometheus format:
                    https://prometheus.io/docs/prometheus/latest/configuration/recording_rules/'
                  properties:
                    interval:
                      description: The interval at which to evaluate the rules. Must
                        be a valid Prometheus duration.
                      type: string
                    name:
                      description: The name of the rule group.
                      type: string
                    rules:
                      description: A list of rules that are executed sequentially
                        as part of this group.
                      items:
                        description: 'Rule is a single rule in the Prometheus format:
                          https://prometheus.io/docs/prometheus/latest/configuration/recording_rules/'
                        properties:
                          alert:
                            description: Name of the alert to evaluate the expression
                              as. Only one of `record` and `alert` must be set.
                            type: string
                          annotations:
                            additionalProperties:
                              type: string
                            description: A set of annotations to attach to alerts
                              produced by the query expression. Only valid if `alert`
                              is set.
                            type: object
                          expr:
                            description: The PromQL expression to evaluate.
                            type: string
                          for:
                            description: The duration to wait before a firing alert
                              produced by this rule is sent to Alertmanager. Only
                              valid if `alert` is set.
                            type: string
                          labels:
                            additionalProperties:
                              type: string
                            description: A set of labels to attach to the result of
                              the query expression.
                            type: object
                          record:
                            description: Record the result of the expression to this
                              metric name. Only one of `record` and `alert` must be
                              set.
                            type: string
                        required:
                        - expr
                        type: object
                      type: array
                  required:
                  - interval
                  - name
                  - rules
                  type: object
                type: array
            required:
            - groups
            type: object
          status:
            description: Most recently observed status of the resource.
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: GlobalRules defines Prometheus alerting and recording rules that
          are scoped to all data in the queried project. If the project_id or location
          labels are not preserved by the rule, they default to the values of the
          cluster.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: Specification of rules to record and alert on.
            properties:
              groups:
                description: A list of Prometheus rule groups.
                items:
                  description: 'RuleGroup declares rules in the Prometheus format:
                    https://prometheus.io/docs/prometheus/latest/configuration/recording_rules/'
                  properties:
                    interval:
                      description: The interval at which to evaluate the rules. Must
                        be a valid Prometheus duration.
                      type: string
                    name:
                      description: The name of the rule group.
                      type: string
                    rules:
                      description: A list of rules that are executed sequentially
                        as part of this group.
                      items:
                        description: 'Rule is a single rule in the Prometheus format:
                          https://prometheus.io/docs/prometheus/latest/configuration/recording_rules/'
                        properties:
                          alert:
                            description: Name of the alert to evaluate the expression
                              as. Only one of `record` and `alert` must be set.
                            type: string
                          annotations:
                            additionalProperties:
                              type: string
                            description: A set of annotations to attach to alerts
                              produced by the query expression. Only valid if `alert`
                              is set.
                            type: object
                          expr:
                            description: The PromQL expression to evaluate.
                            type: string
                          for:
                            description: The duration to wait before a firing alert
                              produced by this rule is sent to Alertmanager. Only
                              valid if `alert` is set.
                            type: string
                          labels:
                            additionalProperties:
                              type: string
                            description: A set of labels to attach to the result of
                              the query expression.
                            type: object
                          record:
                            description: Record the result of the expression to this
                              metric name. Only one of `record` and `alert` must be
                              set.
                            type: string
                        required:
                        - expr
                        type: object
                      type: array
                  required:
                  - interval
                  - name
                  - rules
                  type: object
                type: array
            required:
            - groups
            type: object
          status:
            description: Most recently observed status of the resource.
            type: object
        required:
        - spec
        type: object
    served: true
    storage: false
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.7.0
  creationTimestamp: null
  name: operatorconfigs.monitoring.googleapis.com
spec:
  group: monitoring.googleapis.com
  names:
    kind: OperatorConfig
    listKind: OperatorConfigList
    plural: operatorconfigs
    singular: operatorconfig
  scope: Namespaced
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: OperatorConfig defines configuration of the gmp-operator.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          collection:
            description: Collection specifies how the operator configures collection.
            properties:
              credentials:
                description: A reference to GCP service account credentials with which
                  Prometheus collectors are run. It needs to have metric write permissions
                  for all project IDs to which data is written. Within GKE, this can
                  typically be left empty if the compute default service account has
                  the required permissions.
                properties:
                  key:
                    description: The key of the secret to select from.  Must be a
                      valid secret key.
                    type: string
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                  optional:
                    description: Specify whether the Secret or its key must be defined
                    type: boolean
                required:
                - key
                type: object
              externalLabels:
                additionalProperties:
                  type: string
                description: ExternalLabels specifies external labels that are attached
                  to all scraped data before being written to Cloud Monitoring. The
                  precedence behavior matches that of Prometheus.
                type: object
              filter:
                description: Filter limits which metric data is sent to Cloud Monitoring.
                properties:
                  matchOneOf:
                    description: "A list Prometheus time series matchers. Every time
                      series must match at least one of the matchers to be exported.
                      This field can be used equivalently to the match[] parameter
                      of the Prometheus federation endpoint to selectively export
                      data. \n Example: `[\"{job='prometheus'}\", \"{__name__=~'job:.*'}\"]`"
                    items:
                      type: string
                    type: array
                type: object
            type: object
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          rules:
            description: Rules specifies how the operator configures and deployes
              rule-evaluator.
            properties:
              alerting:
                description: Alerting contains how the rule-evaluator configures alerting.
                properties:
                  alertmanagers:
                    description: Alertmanagers contains endpoint configuration for
                      designated Alertmanagers.
                    items:
                      description: AlertmanagerEndpoints defines a selection of a
                        single Endpoints object containing alertmanager IPs to fire
                        alerts against.
                      properties:
                        apiVersion:
                          description: Version of the Alertmanager API that rule-evaluator
                            uses to send alerts. It can be "v1" or "v2".
                          type: string
                        authorization:
                          description: Authorization section for this alertmanager
                            endpoint
                          properties:
                            credentials:
                              description: The secret's key that contains the credentials
                                of the request
                              properties:
                                key:
                                  description: The key of the secret to select from.  Must
                                    be a valid secret key.
                                  type: string
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    TODO: Add other useful fields. apiVersion, kind,
                                    uid?'
                                  type: string
                                optional:
                                  description: Specify whether the Secret or its key
                                    must be defined
                                  type: boolean
                              required:
                              - key
                              type: object
                            type:
                              description: Set the authentication type. Defaults to
                                Bearer, Basic will cause an error
                              type: string
                          type: object
                        name:
                          description: Name of Endpoints object in Namespace.
                          type: string
                        namespace:
                          description: Namespace of Endpoints object.
                          type: string
                        pathPrefix:
                          description: Prefix for the HTTP path alerts are pushed
                            to.
                          type: string
                        port:
                          anyOf:
                          - type: integer
                          - type: string
                          description: Port the Alertmanager API is exposed on.
                          x-kubernetes-int-or-string: true
                        scheme:
                          description: Scheme to use when firing alerts.
                          type: string
                        timeout:
                          description: Timeout is a per-target Alertmanager timeout
                            when pushing alerts.
                          type: string
                        tls:
                          description: TLS Config to use for alertmanager connection.
                          properties:
                            ca:
                              description: Struct containing the CA cert to use for
                                the targets.
                              properties:
                                configMap:
                                  description: ConfigMap containing data to use for
                                    the targets.
                                  properties:
                                    key:
                                      description: The key to select.
                                      type: string
                                    name:
                                      description: 'Name of the referent. More info:
                                        https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        TODO: Add other useful fields. apiVersion,
                                        kind, uid?'
                                      type: string
                                    optional:
                                      description: Specify whether the ConfigMap or
                                        its key must be defined
                                      type: boolean
                                  required:
                                  - key
                                  type: object
                                secret:
                                  description: Secret containing data to use for the
                                    targets.
                                  properties:
                                    key:
                                      description: The key of the secret to select
                                        from.  Must be a valid secret key.
                                      type: string
                                    name:
                                      description: 'Name of the referent. More info:
                                        https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        TODO: Add other useful fields. apiVersion,
                                        kind, uid?'
                                      type: string
                                    optional:
                                      description: Specify whether the Secret or its
                                        key must be defined
                                      type: boolean
                                  required:
                                  - key
                                  type: object
                              type: object
                            cert:
                              description: Struct containing the client cert file
                                for the targets.
                              properties:
                                configMap:
                                  description: ConfigMap containing data to use for
                                    the targets.
                                  properties:
                                    key:
                                      description: The key to select.
                                      type: string
                                    name:
                                      description: 'Name of the referent. More info:
                                        https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        TODO: Add other useful fields. apiVersion,
                                        kind, uid?'
                                      type: string
                                    optional:
                                      description: Specify whether the ConfigMap or
                                        its key must be defined
                                      type: boolean
                                  required:
                                  - key
                                  type: object
                                secret:
                                  description: Secret containing data to use for the
                                    targets.
                                  properties:
                                    key:
                                      description: The key of the secret to select
                                        from.  Must be a valid secret key.
                                      type: string
                                    name:
                                      description: 'Name of the referent. More info:
                                        https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        TODO: Add other useful fields. apiVersion,
                                        kind, uid?'
                                      type: string
                                    optional:
                                      description: Specify whether the Secret or its
                                        key must be defined
                                      type: boolean
                                  required:
                                  - key
                                  type: object
                              type: object
                            insecureSkipVerify:
                              description: Disable target certificate validation.
                              type: boolean
                            keySecret:
                              description: Secret containing the client key file for
                                the targets.
                              properties:
                                key:
                                  description: The key of the secret to select from.  Must
                                    be a valid secret key.
                                  type: string
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    TODO: Add other useful fields. apiVersion, kind,
                                    uid?'
                                  type: string
                                optional:
                                  description: Specify whether the Secret or its key
                                    must be defined
                                  type: boolean
                              required:
                              - key
                              type: object
                            serverName:
                              description: Used to verify the hostname for the targets.
                              type: string
                          type: object
                      required:
                      - name
                      - namespace
                      - port
                      type: object
                    type: array
                type: object
              credentials:
                description: A reference to GCP service account credentials with which
                  the rule evaluator container is run. It needs to have metric read
                  permissions against queryProjectId and metric write permissions
                  against all projects to which rule results are written. Within GKE,
                  this can typically be left empty if the compute default service
                  account has the required permissions.
                properties:
                  key:
                    description: The key of the secret to select from.  Must be a
                      valid secret key.
                    type: string
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                  optional:
                    description: Specify whether the Secret or its key must be defined
                    type: boolean
                required:
                - key
                type: object
              externalLabels:
                additionalProperties:
                  type: string
                description: ExternalLabels specifies external labels that are attached
                  to any rule results and alerts produced by rules. The precedence
                  behavior matches that of Prometheus.
                type: object
              queryProjectID:
                description: QueryProjectID is the GCP project ID to evaluate rules
                  against. If left blank, the rule-evaluator will try attempt to infer
                  the Project ID from the environment.
                type: string
            type: object
        type: object
    served: true
    storage: true
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: OperatorConfig defines configuration of the gmp-operator.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          collection:
            description: Collection specifies how the operator configures collection.
            properties:
              credentials:
                description: A reference to GCP service account credentials with which
                  Prometheus collectors are run. It needs to have metric write permissions
                  for all project IDs to which data is written. Within GKE, this can
                  typically be left empty if the compute default service account has
                  the required permissions.
                properties:
                  key:
                    description: The key of the secret to select from.  Must be a
                      valid secret key.
                    type: string
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                  optional:
                    description: Specify whether the Secret or its key must be defined
                    type: boolean
                required:
                - key
                type: object
              externalLabels:
                additionalProperties:
                  type: string
                description: ExternalLabels specifies external labels that are attached
                  to all scraped data before being written to Cloud Monitoring. The
                  precedence behavior matches that of Prometheus.
                type: object
              filter:
                description: Filter limits which metric data is sent to Cloud Monitoring.
                properties:
                  matchOneOf:
                    description: "A list Prometheus time series matchers. Every time
                      series must match at least one of the matchers to be exported.
                      This field can be used equivalently to the match[] parameter
                      of the Prometheus federation endpoint to selectively export
                      data. \n Example: `[\"{job='prometheus'}\", \"{__name__=~'job:.*'}\"]`"
                    items:
                      type: string
                    type: array
                type: object
            type: object
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          rules:
            description: Rules specifies how the operator configures and deployes
              rule-evaluator.
            properties:
              alerting:
                description: Alerting contains how the rule-evaluator configures alerting.
                properties:
                  alertmanagers:
                    description: Alertmanagers contains endpoint configuration for
                      designated Alertmanagers.
                    items:
                      description: AlertmanagerEndpoints defines a selection of a
                        single Endpoints object containing alertmanager IPs to fire
                        alerts against.
                      properties:
                        apiVersion:
                          description: Version of the Alertmanager API that rule-evaluator
                            uses to send alerts. It can be "v1" or "v2".
                          type: string
                        authorization:
                          description: Authorization section for this alertmanager
                            endpoint
                          properties:
                            credentials:
                              description: The secret's key that contains the credentials
                                of the request
                              properties:
                                key:
                                  description: The key of the secret to select from.  Must
                                    be a valid secret key.
                                  type: string
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    TODO: Add other useful fields. apiVersion, kind,
                                    uid?'
                                  type: string
                                optional:
                                  description: Specify whether the Secret or its key
                                    must be defined
                                  type: boolean
                              required:
                              - key
                              type: object
                            type:
                              description: Set the authentication type. Defaults to
                                Bearer, Basic will cause an error
                              type: string
                          type: object
                        name:
                          description: Name of Endpoints object in Namespace.
                          type: string
                        namespace:
                          description: Namespace of Endpoints object.
                          type: string
                        pathPrefix:
                          description: Prefix for the HTTP path alerts are pushed
                            to.
                          type: string
                        port:
                          anyOf:
                          - type: integer
                          - type: string
                          description: Port the Alertmanager API is exposed on.
                          x-kubernetes-int-or-string: true
                        scheme:
                          description: Scheme to use when firing alerts.
                          type: string
                        timeout:
                          description: Timeout is a per-target Alertmanager timeout
                            when pushing alerts.
                          type: string
                        tls:
                          description: TLS Config to use for alertmanager connection.
                          properties:
                            ca:
                              description: Struct containing the CA cert to use for
                                the targets.
                              properties:
                                configMap:
                                  description: ConfigMap containing data to use for
                                    the targets.
                                  properties:
                                    key:
                                      description: The key to select.
                                      type: string
                                    name:
                                      description: 'Name of the referent. More info:
                                        https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        TODO: Add other useful fields. apiVersion,
                                        kind, uid?'
                                      type: string
                                    optional:
                                      description: Specify whether the ConfigMap or
                                        its key must be defined
                                      type: boolean
                                  required:
                                  - key
                                  type: object
                                secret:
                                  description: Secret containing data to use for the
                                    targets.
                                  properties:
                                    key:
                                      description: The key of the secret to select
                                        from.  Must be a valid secret key.
                                      type: string
                                    name:
                                      description: 'Name of the referent. More info:
                                        https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        TODO: Add other useful fields. apiVersion,
                                        kind, uid?'
                                      type: string
                                    optional:
                                      description: Specify whether the Secret or its
                                        key must be defined
                                      type: boolean
                                  required:
                                  - key
                                  type: object
                              type: object
                            cert:
                              description: Struct containing the client cert file
                                for the targets.
                              properties:
                                configMap:
                                  description: ConfigMap containing data to use for
                                    the targets.
                                  properties:
                                    key:
                                      description: The key to select.
                                      type: string
                                    name:
                                      description: 'Name of the referent. More info:
                                        https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        TODO: Add other useful fields. apiVersion,
                                        kind, uid?'
                                      type: string
                                    optional:
                                      description: Specify whether the ConfigMap or
                                        its key must be defined
                                      type: boolean
                                  required:
                                  - key
                                  type: object
                                secret:
                                  description: Secret containing data to use for the
                                    targets.
                                  properties:
                                    key:
                                      description: The key of the secret to select
                                        from.  Must be a valid secret key.
                                      type: string
                                    name:
                                      description: 'Name of the referent. More info:
                                        https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        TODO: Add other useful fields. apiVersion,
                                        kind, uid?'
                                      type: string
                                    optional:
                                      description: Specify whether the Secret or its
                                        key must be defined
                                      type: boolean
                                  required:
                                  - key
                                  type: object
                              type: object
                            insecureSkipVerify:
                              description: Disable target certificate validation.
                              type: boolean
                            keySecret:
                              description: Secret containing the client key file for
                                the targets.
                              properties:
                                key:
                                  description: The key of the secret to select from.  Must
                                    be a valid secret key.
                                  type: string
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    TODO: Add other useful fields. apiVersion, kind,
                                    uid?'
                                  type: string
                                optional:
                                  description: Specify whether the Secret or its key
                                    must be defined
                                  type: boolean
                              required:
                              - key
                              type: object
                            serverName:
                              description: Used to verify the hostname for the targets.
                              type: string
                          type: object
                      required:
                      - name
                      - namespace
                      - port
                      type: object
                    type: array
                type: object
              credentials:
                description: A reference to GCP service account credentials with which
                  the rule evaluator container is run. It needs to have metric read
                  permissions against queryProjectId and metric write permissions
                  against all projects to which rule results are written. Within GKE,
                  this can typically be left empty if the compute default service
                  account has the required permissions.
                properties:
                  key:
                    description: The key of the secret to select from.  Must be a
                      valid secret key.
                    type: string
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                  optional:
                    description: Specify whether the Secret or its key must be defined
                    type: boolean
                required:
                - key
                type: object
              externalLabels:
                additionalProperties:
                  type: string
                description: ExternalLabels specifies external labels that are attached
                  to any rule results and alerts produced by rules. The precedence
                  behavior matches that of Prometheus.
                type: object
              queryProjectID:
                description: QueryProjectID is the GCP project ID to evaluate rules
                  against. If left blank, the rule-evaluator will try attempt to infer
                  the Project ID from the environment.
                type: string
            type: object
        type: object
    served: true
    storage: false
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.7.0
  creationTimestamp: null
  name: podmonitorings.monitoring.googleapis.com
spec:
  group: monitoring.googleapis.com
  names:
    kind: PodMonitoring
    listKind: PodMonitoringList
    plural: podmonitorings
    singular: podmonitoring
  scope: Namespaced
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: PodMonitoring defines monitoring for a set of pods.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: Specification of desired Pod selection for target discovery
              by Prometheus.
            properties:
              endpoints:
                description: The endpoints to scrape on the selected pods.
                items:
                  description: ScrapeEndpoint specifies a Prometheus metrics endpoint
                    to scrape.
                  properties:
                    interval:
                      description: Interval at which to scrape metrics. Must be a
                        valid Prometheus duration.
                      type: string
                    metricRelabeling:
                      description: Relabeling rules for metrics scraped from this
                        endpoint. Relabeling rules that override protected target
                        labels (project_id, location, cluster, namespace, job, instance,
                        or __address__) are not permitted. The labelmap action is
                        not permitted in general.
                      items:
                        description: RelabelingRule defines a single Prometheus relabeling
                          rule.
                        properties:
                          action:
                            description: Action to perform based on regex matching.
                              Defaults to 'replace'.
                            type: string
                          modulus:
                            description: Modulus to take of the hash of the source
                              label values.
                            format: int64
                            type: integer
                          regex:
                            description: Regular expression against which the extracted
                              value is matched. Defaults to '(.*)'.
                            type: string
                          replacement:
                            description: Replacement value against which a regex replace
                              is performed if the regular expression matches. Regex
                              capture groups are available. Defaults to '$1'.
                            type: string
                          separator:
                            description: Separator placed between concatenated source
                              label values. Defaults to ';'.
                            type: string
                          sourceLabels:
                            description: The source labels select values from existing
                              labels. Their content is concatenated using the configured
                              separator and matched against the configured regular
                              expression for the replace, keep, and drop actions.
                            items:
                              type: string
                            type: array
                          targetLabel:
                            description: Label to which the resulting value is written
                              in a replace action. It is mandatory for replace actions.
                              Regex capture groups are available.
                            type: string
                        type: object
                      type: array
                    params:
                      additionalProperties:
                        items:
                          type: string
                        type: array
                      description: HTTP GET params to use when scraping.
                      type: object
                    path:
                      description: HTTP path to scrape metrics from. Defaults to "/metrics".
                      type: string
                    port:
                      anyOf:
                      - type: integer
                      - type: string
                      description: Name or number of the port to scrape. If the specified
                        port is numeric, the selected pod must either not declare
                        any ports in its spec or declare the specified port number
                        as well.
                      x-kubernetes-int-or-string: true
                    proxyUrl:
                      description: Proxy URL to scrape through. Encoded passwords
                        are not supported.
                      type: string
                    scheme:
                      description: Protocol scheme to use to scrape.
                      type: string
                    timeout:
                      description: Timeout for metrics scrapes. Must be a valid Prometheus
                        duration. Must not be larger then the scrape interval.
                      type: string
                  required:
                  - port
                  type: object
                type: array
              limits:
                description: Limits to apply at scrape time.
                properties:
                  labelNameLength:
                    description: Maximum label name length. Uses Prometheus default
                      if left unspecified.
                    format: int64
                    type: integer
                  labelValueLength:
                    description: Maximum label value length. Uses Prometheus default
                      if left unspecified.
                    format: int64
                    type: integer
                  labels:
                    description: Maximum number of labels accepted for a single sample.
                      Uses Prometheus default if left unspecified.
                    format: int64
                    type: integer
                  samples:
                    description: Maximum number of samples accepted within a single
                      scrape. Uses Prometheus default if left unspecified.
                    format: int64
                    type: integer
                type: object
              selector:
                description: Label selector that specifies which pods are selected
                  for this monitoring configuration.
                properties:
                  matchExpressions:
                    description: matchExpressions is a list of label selector requirements.
                      The requirements are ANDed.
                    items:
                      description: A label selector requirement is a selector that
                        contains values, a key, and an operator that relates the key
                        and values.
                      properties:
                        key:
                          description: key is the label key that the selector applies
                            to.
                          type: string
                        operator:
                          description: operator represents a key's relationship to
                            a set of values. Valid operators are In, NotIn, Exists
                            and DoesNotExist.
                          type: string
                        values:
                          description: values is an array of string values. If the
                            operator is In or NotIn, the values array must be non-empty.
                            If the operator is Exists or DoesNotExist, the values
                            array must be empty. This array is replaced during a strategic
                            merge patch.
                          items:
                            type: string
                          type: array
                      required:
                      - key
                      - operator
                      type: object
                    type: array
                  matchLabels:
                    additionalProperties:
                      type: string
                    description: matchLabels is a map of {key,value} pairs. A single
                      {key,value} in the matchLabels map is equivalent to an element
                      of matchExpressions, whose key field is "key", the operator
                      is "In", and the values array contains only "value". The requirements
                      are ANDed.
                    type: object
                type: object
              targetLabels:
                description: Labels to add to the Prometheus target for discovered
                  endpoints.
                properties:
                  fromPod:
                    description: Labels to transfer from the Kubernetes Pod to Prometheus
                      target labels. Mappings are applied in order.
                    items:
                      description: LabelMapping specifies how to transfer a label
                        from a Kubernetes resource onto a Prometheus target.
                      properties:
                        from:
                          description: Kubenetes resource label to remap.
                          type: string
                        to:
                          description: Remapped Prometheus target label. Defaults
                            to the same name as `From`.
                          type: string
                      required:
                      - from
                      type: object
                    type: array
                  metadata:
                    description: Pod metadata labels that are set on all scraped targets.
                      Permitted keys are `pod`, `container`, and `node` for PodMonitoring
                      and `pod`, `container`, `node`, and `namespace` for ClusterPodMonitoring.
                      Defaults to [pod, container] for PodMonitoring and [namespace,
                      pod, container] for ClusterPodMonitoring. If set to null, it
                      will be interpreted as the empty list for PodMonitoring and
                      to [namespace] for ClusterPodMonitoring. This is for backwards-compatibility
                      only.
                    items:
                      type: string
                    type: array
                type: object
            required:
            - endpoints
            - selector
            type: object
          status:
            description: Most recently observed status of the resource.
            properties:
              conditions:
                description: Represents the latest available observations of a podmonitor's
                  current state.
                items:
                  description: MonitoringCondition describes a condition of a PodMonitoring.
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another.
                      format: date-time
                      type: string
                    lastUpdateTime:
                      description: The last time this condition was updated.
                      format: date-time
                      type: string
                    message:
                      description: A human-readable message indicating details about
                        the transition.
                      type: string
                    reason:
                      description: The reason for the condition's last transition.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: MonitoringConditionType is the type of MonitoringCondition.
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: The generation observed by the controller.
                format: int64
                type: integer
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: PodMonitoring defines monitoring for a set of pods.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: Specification of desired Pod selection for target discovery
              by Prometheus.
            properties:
              endpoints:
                description: The endpoints to scrape on the selected pods.
                items:
                  description: ScrapeEndpoint specifies a Prometheus metrics endpoint
                    to scrape.
                  properties:
                    interval:
                      description: Interval at which to scrape metrics. Must be a
                        valid Prometheus duration.
                      type: string
                    metricRelabeling:
                      description: Relabeling rules for metrics scraped from this
                        endpoint. Relabeling rules that override protected target
                        labels (project_id, location, cluster, namespace, job, instance,
                        or __address__) are not permitted. The labelmap action is
                        not permitted in general.
                      items:
                        description: RelabelingRule defines a single Prometheus relabeling
                          rule.
                        properties:
                          action:
                            description: Action to perform based on regex matching.
                              Defaults to 'replace'.
                            type: string
                          modulus:
                            description: Modulus to take of the hash of the source
                              label values.
                            format: int64
                            type: integer
                          regex:
                            description: Regular expression against which the extracted
                              value is matched. Defaults to '(.*)'.
                            type: string
                          replacement:
                            description: Replacement value against which a regex replace
                              is performed if the regular expression matches. Regex
                              capture groups are available. Defaults to '$1'.
                            type: string
                          separator:
                            description: Separator placed between concatenated source
                              label values. Defaults to ';'.
                            type: string
                          sourceLabels:
                            description: The source labels select values from existing
                              labels. Their content is concatenated using the configured
                              separator and matched against the configured regular
                              expression for the replace, keep, and drop actions.
                            items:
                              type: string
                            type: array
                          targetLabel:
                            description: Label to which the resulting value is written
                              in a replace action. It is mandatory for replace actions.
                              Regex capture groups are available.
                            type: string
                        type: object
                      type: array
                    params:
                      additionalProperties:
                        items:
                          type: string
                        type: array
                      description: HTTP GET params to use when scraping.
                      type: object
                    path:
                      description: HTTP path to scrape metrics from. Defaults to "/metrics".
                      type: string
                    port:
                      anyOf:
                      - type: integer
                      - type: string
                      description: Name or number of the port to scrape.
                      x-kubernetes-int-or-string: true
                    proxyUrl:
                      description: Proxy URL to scrape through. Encoded passwords
                        are not supported.
                      type: string
                    scheme:
                      description: Protocol scheme to use to scrape.
                      type: string
                    timeout:
                      description: Timeout for metrics scrapes. Must be a valid Prometheus
                        duration. Must not be larger then the scrape interval.
                      type: string
                  required:
                  - port
                  type: object
                type: array
              limits:
                description: Limits to apply at scrape time.
                properties:
                  labelNameLength:
                    description: Maximum label name length. Uses Prometheus default
                      if left unspecified.
                    format: int64
                    type: integer
                  labelValueLength:
                    description: Maximum label value length. Uses Prometheus default
                      if left unspecified.
                    format: int64
                    type: integer
                  labels:
                    description: Maximum number of labels accepted for a single sample.
                      Uses Prometheus default if left unspecified.
                    format: int64
                    type: integer
                  samples:
                    description: Maximum number of samples accepted within a single
                      scrape. Uses Prometheus default if left unspecified.
                    format: int64
                    type: integer
                type: object
              selector:
                description: Label selector that specifies which pods are selected
                  for this monitoring configuration.
                properties:
                  matchExpressions:
                    description: matchExpressions is a list of label selector requirements.
                      The requirements are ANDed.
                    items:
                      description: A label selector requirement is a selector that
                        contains values, a key, and an operator that relates the key
                        and values.
                      properties:
                        key:
                          description: key is the label key that the selector applies
                            to.
                          type: string
                        operator:
                          description: operator represents a key's relationship to
                            a set of values. Valid operators are In, NotIn, Exists
                            and DoesNotExist.
                          type: string
                        values:
                          description: values is an array of string values. If the
                            operator is In or NotIn, the values array must be non-empty.
                            If the operator is Exists or DoesNotExist, the values
                            array must be empty. This array is replaced during a strategic
                            merge patch.
                          items:
                            type: string
                          type: array
                      required:
                      - key
                      - operator
                      type: object
                    type: array
                  matchLabels:
                    additionalProperties:
                      type: string
                    description: matchLabels is a map of {key,value} pairs. A single
                      {key,value} in the matchLabels map is equivalent to an element
                      of matchExpressions, whose key field is "key", the operator
                      is "In", and the values array contains only "value". The requirements
                      are ANDed.
                    type: object
                type: object
              targetLabels:
                description: Labels to add to the Prometheus target for discovered
                  endpoints.
                properties:
                  fromPod:
                    description: Labels to transfer from the Kubernetes Pod to Prometheus
                      target labels. Mappings are applied in order.
                    items:
                      description: LabelMapping specifies how to transfer a label
                        from a Kubernetes resource onto a Prometheus target.
                      properties:
                        from:
                          description: Kubenetes resource label to remap.
                          type: string
                        to:
                          description: Remapped Prometheus target label. Defaults
                            to the same name as `From`.
                          type: string
                      required:
                      - from
                      type: object
                    type: array
                  metadata:
                    description: Pod metadata labels that are set on all scraped targets.
                      Permitted keys are `pod`, `container`, and `node` for PodMonitoring
                      and `pod`, `container`, `node`, and `namespace` for ClusterPodMonitoring.
                      Defaults to [pod, container] for PodMonitoring and [namespace,
                      pod, container] for ClusterPodMonitoring. If set to null, it
                      will be interpreted as the empty list for PodMonitoring and
                      to [namespace] for ClusterPodMonitoring. This is for backwards-compatibility
                      only.
                    items:
                      type: string
                    type: array
                type: object
            required:
            - endpoints
            - selector
            type: object
          status:
            description: Most recently observed status of the resource.
            properties:
              conditions:
                description: Represents the latest available observations of a podmonitor's
                  current state.
                items:
                  description: MonitoringCondition describes a condition of a PodMonitoring.
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another.
                      format: date-time
                      type: string
                    lastUpdateTime:
                      description: The last time this condition was updated.
                      format: date-time
                      type: string
                    message:
                      description: A human-readable message indicating details about
                        the transition.
                      type: string
                    reason:
                      description: The reason for the condition's last transition.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: MonitoringConditionType is the type of MonitoringCondition.
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: The generation observed by the controller.
                format: int64
                type: integer
            type: object
        required:
        - spec
        type: object
    served: true
    storage: false
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.7.0
  creationTimestamp: null
  name: rules.monitoring.googleapis.com
spec:
  group: monitoring.googleapis.com
  names:
    kind: Rules
    listKind: RulesList
    plural: rules
    singular: rules
  scope: Namespaced
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: Rules defines Prometheus alerting and recording rules that are
          scoped to the namespace of the resource. Only metric data from this namespace
          is processed and all rule results have their project_id, cluster, and namespace
          label preserved for query processing. If the location label is not preserved
          by the rule, it defaults to the cluster's location.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: Specification of rules to record and alert on.
            properties:
              groups:
                description: A list of Prometheus rule groups.
                items:
                  description: 'RuleGroup declares rules in the Prometheus format:
                    https://prometheus.io/docs/prometheus/latest/configuration/recording_rules/'
                  properties:
                    interval:
                      description: The interval at which to evaluate the rules. Must
                        be a valid Prometheus duration.
                      type: string
                    name:
                      description: The name of the rule group.
                      type: string
                    rules:
                      description: A list of rules that are executed sequentially
                        as part of this group.
                      items:
                        description: 'Rule is a single rule in the Prometheus format:
                          https://prometheus.io/docs/prometheus/latest/configuration/recording_rules/'
                        properties:
                          alert:
                            description: Name of the alert to evaluate the expression
                              as. Only one of `record` and `alert` must be set.
                            type: string
                          annotations:
                            additionalProperties:
                              type: string
                            description: A set of annotations to attach to alerts
                              produced by the query expression. Only valid if `alert`
                              is set.
                            type: object
                          expr:
                            description: The PromQL expression to evaluate.
                            type: string
                          for:
                            description: The duration to wait before a firing alert
                              produced by this rule is sent to Alertmanager. Only
                              valid if `alert` is set.
                            type: string
                          labels:
                            additionalProperties:
                              type: string
                            description: A set of labels to attach to the result of
                              the query expression.
                            type: object
                          record:
                            description: Record the result of the expression to this
                              metric name. Only one of `record` and `alert` must be
                              set.
                            type: string
                        required:
                        - expr
                        type: object
                      type: array
                  required:
                  - interval
                  - name
                  - rules
                  type: object
                type: array
            required:
            - groups
            type: object
          status:
            description: Most recently observed status of the resource.
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Rules defines Prometheus alerting and recording rules that are
          scoped to the namespace of the resource. Only metric data from this namespace
          is processed and all rule results have their project_id, cluster, and namespace
          label preserved for query processing. If the location label is not preserved
          by the rule, it defaults to the cluster's location.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: Specification of rules to record and alert on.
            properties:
              groups:
                description: A list of Prometheus rule groups.
                items:
                  description: 'RuleGroup declares rules in the Prometheus format:
                    https://prometheus.io/docs/prometheus/latest/configuration/recording_rules/'
                  properties:
                    interval:
                      description: The interval at which to evaluate the rules. Must
                        be a valid Prometheus duration.
                      type: string
                    name:
                      description: The name of the rule group.
                      type: string
                    rules:
                      description: A list of rules that are executed sequentially
                        as part of this group.
                      items:
                        description: 'Rule is a single rule in the Prometheus format:
                          https://prometheus.io/docs/prometheus/latest/configuration/recording_rules/'
                        properties:
                          alert:
                            description: Name of the alert to evaluate the expression
                              as. Only one of `record` and `alert` must be set.
                            type: string
                          annotations:
                            additionalProperties:
                              type: string
                            description: A set of annotations to attach to alerts
                              produced by the query expression. Only valid if `alert`
                              is set.
                            type: object
                          expr:
                            description: The PromQL expression to evaluate.
                            type: string
                          for:
                            description: The duration to wait before a firing alert
                              produced by this rule is sent to Alertmanager. Only
                              valid if `alert` is set.
                            type: string
                          labels:
                            additionalProperties:
                              type: string
                            description: A set of labels to attach to the result of
                              the query expression.
                            type: object
                          record:
                            description: Record the result of the expression to this
                              metric name. Only one of `record` and `alert` must be
                              set.
                            type: string
                        required:
                        - expr
                        type: object
                      type: array
                  required:
                  - interval
                  - name
                  - rules
                  type: object
                type: array
            required:
            - groups
            type: object
          status:
            description: Most recently observed status of the resource.
            type: object
        required:
        - spec
        type: object
    served: true
    storage: false
    subresources:
      status: {}
