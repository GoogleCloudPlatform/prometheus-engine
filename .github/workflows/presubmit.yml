# Copyright 2022 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
name: Presubmit
on:
  push:
    branches:
    - main
    - release-.*
  pull_request:

jobs:
  bin:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Build go images
      run: make bin
  conform:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - uses: siderolabs/conform@v0.1.0-alpha.27
      name: Conform Action
  golangci-lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-go@v4
      with:
        go-version: '1.21'
    - name: golangci-lint
      uses: golangci/golangci-lint-action@v3
      with:
        version: v1.57.2
        args: --timeout=5m
  validate:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Check format and autogenerated files
      run: CHECK=1 make regen
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      # Fetch the git tree so we can call `git` commands to validate the tag.
      # TODO(TheSpiritXIII): Remove this when debug.ReadBuildInfo() is fixed.
      with:
        fetch-depth: 0
    - name: Run unit tests
      run: make test
  test-export-gcm:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Run export GCM tests
      env:
        GCM_SECRET: ${{ secrets.GCM_SECRET }}
      run: make test-export-gcm
  test-script-gcm:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Run script GCM tests
      env:
        GCM_SECRET: ${{ secrets.GCM_SECRET }}
      run: make test-script-gcm
  e2e-testruns:
    runs-on: ubuntu-latest
    outputs:
      testrun: ${{ steps.set-testruns.outputs.testrun }}
    steps:
    - uses: actions/checkout@v4
    - id: set-testruns
      run: echo "testrun=$(go test ./e2e/... -list=. | grep -E 'Test*' | jq -R -s -c 'split("\n")[:-1] | map("^" + . + "$")')" >> $GITHUB_OUTPUT
  e2e-test:
    runs-on: ubuntu-latest
    needs: [e2e-testruns]
    strategy:
      matrix:
        testrun: ${{fromJson(needs.e2e-testruns.outputs.testrun)}}
    steps:
    - uses: actions/checkout@v4
    - name: Run e2e
      run: TEST_RUN=${{matrix.testrun}} make e2e
  parca-profile:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.sha }}  # Fetch the PR's code
      - name: Profile the latest stabe version of GMP collector
        run: |
          ../../scripts/deploy_parca.sh https://raw.githubusercontent.com/GoogleCloudPlatform/prometheus-engine/main/manifests/operator.yaml
      - name: Profile the incoming change of GMP collector
        run: |
          ../../scripts/deploy_parca.sh ../../manifests/operator.yaml

